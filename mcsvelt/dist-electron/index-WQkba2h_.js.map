{"version":3,"file":"index-WQkba2h_.js","sources":["../node_modules/isexe/windows.js","../node_modules/isexe/mode.js","../node_modules/isexe/index.js","../node_modules/fluent-ffmpeg/node_modules/which/which.js","../node_modules/fluent-ffmpeg/lib/utils.js","../node_modules/fluent-ffmpeg/lib/options/inputs.js","../node_modules/fluent-ffmpeg/lib/options/audio.js","../node_modules/fluent-ffmpeg/lib/options/video.js","../node_modules/fluent-ffmpeg/lib/options/videosize.js","../node_modules/fluent-ffmpeg/lib/options/output.js","../node_modules/fluent-ffmpeg/lib/options/custom.js","../node_modules/fluent-ffmpeg/lib/options/misc.js","../node_modules/fluent-ffmpeg/node_modules/async/lib/async.js","../node_modules/fluent-ffmpeg/lib/processor.js","../node_modules/fluent-ffmpeg/lib/capabilities.js","../node_modules/fluent-ffmpeg/lib/ffprobe.js","../node_modules/fluent-ffmpeg/lib/recipes.js","../node_modules/fluent-ffmpeg/lib/fluent-ffmpeg.js","../node_modules/fluent-ffmpeg/index.js"],"sourcesContent":["module.exports = isexe\nisexe.sync = sync\n\nvar fs = require('fs')\n\nfunction checkPathExt (path, options) {\n  var pathext = options.pathExt !== undefined ?\n    options.pathExt : process.env.PATHEXT\n\n  if (!pathext) {\n    return true\n  }\n\n  pathext = pathext.split(';')\n  if (pathext.indexOf('') !== -1) {\n    return true\n  }\n  for (var i = 0; i < pathext.length; i++) {\n    var p = pathext[i].toLowerCase()\n    if (p && path.substr(-p.length).toLowerCase() === p) {\n      return true\n    }\n  }\n  return false\n}\n\nfunction checkStat (stat, path, options) {\n  if (!stat.isSymbolicLink() && !stat.isFile()) {\n    return false\n  }\n  return checkPathExt(path, options)\n}\n\nfunction isexe (path, options, cb) {\n  fs.stat(path, function (er, stat) {\n    cb(er, er ? false : checkStat(stat, path, options))\n  })\n}\n\nfunction sync (path, options) {\n  return checkStat(fs.statSync(path), path, options)\n}\n","module.exports = isexe\nisexe.sync = sync\n\nvar fs = require('fs')\n\nfunction isexe (path, options, cb) {\n  fs.stat(path, function (er, stat) {\n    cb(er, er ? false : checkStat(stat, options))\n  })\n}\n\nfunction sync (path, options) {\n  return checkStat(fs.statSync(path), options)\n}\n\nfunction checkStat (stat, options) {\n  return stat.isFile() && checkMode(stat, options)\n}\n\nfunction checkMode (stat, options) {\n  var mod = stat.mode\n  var uid = stat.uid\n  var gid = stat.gid\n\n  var myUid = options.uid !== undefined ?\n    options.uid : process.getuid && process.getuid()\n  var myGid = options.gid !== undefined ?\n    options.gid : process.getgid && process.getgid()\n\n  var u = parseInt('100', 8)\n  var g = parseInt('010', 8)\n  var o = parseInt('001', 8)\n  var ug = u | g\n\n  var ret = (mod & o) ||\n    (mod & g) && gid === myGid ||\n    (mod & u) && uid === myUid ||\n    (mod & ug) && myUid === 0\n\n  return ret\n}\n","var fs = require('fs')\nvar core\nif (process.platform === 'win32' || global.TESTING_WINDOWS) {\n  core = require('./windows.js')\n} else {\n  core = require('./mode.js')\n}\n\nmodule.exports = isexe\nisexe.sync = sync\n\nfunction isexe (path, options, cb) {\n  if (typeof options === 'function') {\n    cb = options\n    options = {}\n  }\n\n  if (!cb) {\n    if (typeof Promise !== 'function') {\n      throw new TypeError('callback not provided')\n    }\n\n    return new Promise(function (resolve, reject) {\n      isexe(path, options || {}, function (er, is) {\n        if (er) {\n          reject(er)\n        } else {\n          resolve(is)\n        }\n      })\n    })\n  }\n\n  core(path, options || {}, function (er, is) {\n    // ignore EACCES because that just means we aren't allowed to run it\n    if (er) {\n      if (er.code === 'EACCES' || options && options.ignoreErrors) {\n        er = null\n        is = false\n      }\n    }\n    cb(er, is)\n  })\n}\n\nfunction sync (path, options) {\n  // my kingdom for a filtered catch\n  try {\n    return core.sync(path, options || {})\n  } catch (er) {\n    if (options && options.ignoreErrors || er.code === 'EACCES') {\n      return false\n    } else {\n      throw er\n    }\n  }\n}\n","module.exports = which\nwhich.sync = whichSync\n\nvar isWindows = process.platform === 'win32' ||\n    process.env.OSTYPE === 'cygwin' ||\n    process.env.OSTYPE === 'msys'\n\nvar path = require('path')\nvar COLON = isWindows ? ';' : ':'\nvar isexe = require('isexe')\n\nfunction getNotFoundError (cmd) {\n  var er = new Error('not found: ' + cmd)\n  er.code = 'ENOENT'\n\n  return er\n}\n\nfunction getPathInfo (cmd, opt) {\n  var colon = opt.colon || COLON\n  var pathEnv = opt.path || process.env.PATH || ''\n  var pathExt = ['']\n\n  pathEnv = pathEnv.split(colon)\n\n  var pathExtExe = ''\n  if (isWindows) {\n    pathEnv.unshift(process.cwd())\n    pathExtExe = (opt.pathExt || process.env.PATHEXT || '.EXE;.CMD;.BAT;.COM')\n    pathExt = pathExtExe.split(colon)\n\n\n    // Always test the cmd itself first.  isexe will check to make sure\n    // it's found in the pathExt set.\n    if (cmd.indexOf('.') !== -1 && pathExt[0] !== '')\n      pathExt.unshift('')\n  }\n\n  // If it has a slash, then we don't bother searching the pathenv.\n  // just check the file itself, and that's it.\n  if (cmd.match(/\\//) || isWindows && cmd.match(/\\\\/))\n    pathEnv = ['']\n\n  return {\n    env: pathEnv,\n    ext: pathExt,\n    extExe: pathExtExe\n  }\n}\n\nfunction which (cmd, opt, cb) {\n  if (typeof opt === 'function') {\n    cb = opt\n    opt = {}\n  }\n\n  var info = getPathInfo(cmd, opt)\n  var pathEnv = info.env\n  var pathExt = info.ext\n  var pathExtExe = info.extExe\n  var found = []\n\n  ;(function F (i, l) {\n    if (i === l) {\n      if (opt.all && found.length)\n        return cb(null, found)\n      else\n        return cb(getNotFoundError(cmd))\n    }\n\n    var pathPart = pathEnv[i]\n    if (pathPart.charAt(0) === '\"' && pathPart.slice(-1) === '\"')\n      pathPart = pathPart.slice(1, -1)\n\n    var p = path.join(pathPart, cmd)\n    if (!pathPart && (/^\\.[\\\\\\/]/).test(cmd)) {\n      p = cmd.slice(0, 2) + p\n    }\n    ;(function E (ii, ll) {\n      if (ii === ll) return F(i + 1, l)\n      var ext = pathExt[ii]\n      isexe(p + ext, { pathExt: pathExtExe }, function (er, is) {\n        if (!er && is) {\n          if (opt.all)\n            found.push(p + ext)\n          else\n            return cb(null, p + ext)\n        }\n        return E(ii + 1, ll)\n      })\n    })(0, pathExt.length)\n  })(0, pathEnv.length)\n}\n\nfunction whichSync (cmd, opt) {\n  opt = opt || {}\n\n  var info = getPathInfo(cmd, opt)\n  var pathEnv = info.env\n  var pathExt = info.ext\n  var pathExtExe = info.extExe\n  var found = []\n\n  for (var i = 0, l = pathEnv.length; i < l; i ++) {\n    var pathPart = pathEnv[i]\n    if (pathPart.charAt(0) === '\"' && pathPart.slice(-1) === '\"')\n      pathPart = pathPart.slice(1, -1)\n\n    var p = path.join(pathPart, cmd)\n    if (!pathPart && /^\\.[\\\\\\/]/.test(cmd)) {\n      p = cmd.slice(0, 2) + p\n    }\n    for (var j = 0, ll = pathExt.length; j < ll; j ++) {\n      var cur = p + pathExt[j]\n      var is\n      try {\n        is = isexe.sync(cur, { pathExt: pathExtExe })\n        if (is) {\n          if (opt.all)\n            found.push(cur)\n          else\n            return cur\n        }\n      } catch (ex) {}\n    }\n  }\n\n  if (opt.all && found.length)\n    return found\n\n  if (opt.nothrow)\n    return null\n\n  throw getNotFoundError(cmd)\n}\n","/*jshint node:true*/\n'use strict';\n\nvar exec = require('child_process').exec;\nvar isWindows = require('os').platform().match(/win(32|64)/);\nvar which = require('which');\n\nvar nlRegexp = /\\r\\n|\\r|\\n/g;\nvar streamRegexp = /^\\[?(.*?)\\]?$/;\nvar filterEscapeRegexp = /[,]/;\nvar whichCache = {};\n\n/**\n * Parse progress line from ffmpeg stderr\n *\n * @param {String} line progress line\n * @return progress object\n * @private\n */\nfunction parseProgressLine(line) {\n  var progress = {};\n\n  // Remove all spaces after = and trim\n  line  = line.replace(/=\\s+/g, '=').trim();\n  var progressParts = line.split(' ');\n\n  // Split every progress part by \"=\" to get key and value\n  for(var i = 0; i < progressParts.length; i++) {\n    var progressSplit = progressParts[i].split('=', 2);\n    var key = progressSplit[0];\n    var value = progressSplit[1];\n\n    // This is not a progress line\n    if(typeof value === 'undefined')\n      return null;\n\n    progress[key] = value;\n  }\n\n  return progress;\n}\n\n\nvar utils = module.exports = {\n  isWindows: isWindows,\n  streamRegexp: streamRegexp,\n\n\n  /**\n   * Copy an object keys into another one\n   *\n   * @param {Object} source source object\n   * @param {Object} dest destination object\n   * @private\n   */\n  copy: function(source, dest) {\n    Object.keys(source).forEach(function(key) {\n      dest[key] = source[key];\n    });\n  },\n\n\n  /**\n   * Create an argument list\n   *\n   * Returns a function that adds new arguments to the list.\n   * It also has the following methods:\n   * - clear() empties the argument list\n   * - get() returns the argument list\n   * - find(arg, count) finds 'arg' in the list and return the following 'count' items, or undefined if not found\n   * - remove(arg, count) remove 'arg' in the list as well as the following 'count' items\n   *\n   * @private\n   */\n  args: function() {\n    var list = [];\n\n    // Append argument(s) to the list\n    var argfunc = function() {\n      if (arguments.length === 1 && Array.isArray(arguments[0])) {\n        list = list.concat(arguments[0]);\n      } else {\n        list = list.concat([].slice.call(arguments));\n      }\n    };\n\n    // Clear argument list\n    argfunc.clear = function() {\n      list = [];\n    };\n\n    // Return argument list\n    argfunc.get = function() {\n      return list;\n    };\n\n    // Find argument 'arg' in list, and if found, return an array of the 'count' items that follow it\n    argfunc.find = function(arg, count) {\n      var index = list.indexOf(arg);\n      if (index !== -1) {\n        return list.slice(index + 1, index + 1 + (count || 0));\n      }\n    };\n\n    // Find argument 'arg' in list, and if found, remove it as well as the 'count' items that follow it\n    argfunc.remove = function(arg, count) {\n      var index = list.indexOf(arg);\n      if (index !== -1) {\n        list.splice(index, (count || 0) + 1);\n      }\n    };\n\n    // Clone argument list\n    argfunc.clone = function() {\n      var cloned = utils.args();\n      cloned(list);\n      return cloned;\n    };\n\n    return argfunc;\n  },\n\n\n  /**\n   * Generate filter strings\n   *\n   * @param {String[]|Object[]} filters filter specifications. When using objects,\n   *   each must have the following properties:\n   * @param {String} filters.filter filter name\n   * @param {String|Array} [filters.inputs] (array of) input stream specifier(s) for the filter,\n   *   defaults to ffmpeg automatically choosing the first unused matching streams\n   * @param {String|Array} [filters.outputs] (array of) output stream specifier(s) for the filter,\n   *   defaults to ffmpeg automatically assigning the output to the output file\n   * @param {Object|String|Array} [filters.options] filter options, can be omitted to not set any options\n   * @return String[]\n   * @private\n   */\n  makeFilterStrings: function(filters) {\n    return filters.map(function(filterSpec) {\n      if (typeof filterSpec === 'string') {\n        return filterSpec;\n      }\n\n      var filterString = '';\n\n      // Filter string format is:\n      // [input1][input2]...filter[output1][output2]...\n      // The 'filter' part can optionaly have arguments:\n      //   filter=arg1:arg2:arg3\n      //   filter=arg1=v1:arg2=v2:arg3=v3\n\n      // Add inputs\n      if (Array.isArray(filterSpec.inputs)) {\n        filterString += filterSpec.inputs.map(function(streamSpec) {\n          return streamSpec.replace(streamRegexp, '[$1]');\n        }).join('');\n      } else if (typeof filterSpec.inputs === 'string') {\n        filterString += filterSpec.inputs.replace(streamRegexp, '[$1]');\n      }\n\n      // Add filter\n      filterString += filterSpec.filter;\n\n      // Add options\n      if (filterSpec.options) {\n        if (typeof filterSpec.options === 'string' || typeof filterSpec.options === 'number') {\n          // Option string\n          filterString += '=' + filterSpec.options;\n        } else if (Array.isArray(filterSpec.options)) {\n          // Option array (unnamed options)\n          filterString += '=' + filterSpec.options.map(function(option) {\n            if (typeof option === 'string' && option.match(filterEscapeRegexp)) {\n              return '\\'' + option + '\\'';\n            } else {\n              return option;\n            }\n          }).join(':');\n        } else if (Object.keys(filterSpec.options).length) {\n          // Option object (named options)\n          filterString += '=' + Object.keys(filterSpec.options).map(function(option) {\n            var value = filterSpec.options[option];\n\n            if (typeof value === 'string' && value.match(filterEscapeRegexp)) {\n              value = '\\'' + value + '\\'';\n            }\n\n            return option + '=' + value;\n          }).join(':');\n        }\n      }\n\n      // Add outputs\n      if (Array.isArray(filterSpec.outputs)) {\n        filterString += filterSpec.outputs.map(function(streamSpec) {\n          return streamSpec.replace(streamRegexp, '[$1]');\n        }).join('');\n      } else if (typeof filterSpec.outputs === 'string') {\n        filterString += filterSpec.outputs.replace(streamRegexp, '[$1]');\n      }\n\n      return filterString;\n    });\n  },\n\n\n  /**\n   * Search for an executable\n   *\n   * Uses 'which' or 'where' depending on platform\n   *\n   * @param {String} name executable name\n   * @param {Function} callback callback with signature (err, path)\n   * @private\n   */\n  which: function(name, callback) {\n    if (name in whichCache) {\n      return callback(null, whichCache[name]);\n    }\n\n    which(name, function(err, result){\n      if (err) {\n        // Treat errors as not found\n        return callback(null, whichCache[name] = '');\n      }\n      callback(null, whichCache[name] = result);\n    });\n  },\n\n\n  /**\n   * Convert a [[hh:]mm:]ss[.xxx] timemark into seconds\n   *\n   * @param {String} timemark timemark string\n   * @return Number\n   * @private\n   */\n  timemarkToSeconds: function(timemark) {\n    if (typeof timemark === 'number') {\n      return timemark;\n    }\n\n    if (timemark.indexOf(':') === -1 && timemark.indexOf('.') >= 0) {\n      return Number(timemark);\n    }\n\n    var parts = timemark.split(':');\n\n    // add seconds\n    var secs = Number(parts.pop());\n\n    if (parts.length) {\n      // add minutes\n      secs += Number(parts.pop()) * 60;\n    }\n\n    if (parts.length) {\n      // add hours\n      secs += Number(parts.pop()) * 3600;\n    }\n\n    return secs;\n  },\n\n\n  /**\n   * Extract codec data from ffmpeg stderr and emit 'codecData' event if appropriate\n   * Call it with an initially empty codec object once with each line of stderr output until it returns true\n   *\n   * @param {FfmpegCommand} command event emitter\n   * @param {String} stderrLine ffmpeg stderr output line\n   * @param {Object} codecObject object used to accumulate codec data between calls\n   * @return {Boolean} true if codec data is complete (and event was emitted), false otherwise\n   * @private\n   */\n  extractCodecData: function(command, stderrLine, codecsObject) {\n    var inputPattern = /Input #[0-9]+, ([^ ]+),/;\n    var durPattern = /Duration\\: ([^,]+)/;\n    var audioPattern = /Audio\\: (.*)/;\n    var videoPattern = /Video\\: (.*)/;\n\n    if (!('inputStack' in codecsObject)) {\n      codecsObject.inputStack = [];\n      codecsObject.inputIndex = -1;\n      codecsObject.inInput = false;\n    }\n\n    var inputStack = codecsObject.inputStack;\n    var inputIndex = codecsObject.inputIndex;\n    var inInput = codecsObject.inInput;\n\n    var format, dur, audio, video;\n\n    if (format = stderrLine.match(inputPattern)) {\n      inInput = codecsObject.inInput = true;\n      inputIndex = codecsObject.inputIndex = codecsObject.inputIndex + 1;\n\n      inputStack[inputIndex] = { format: format[1], audio: '', video: '', duration: '' };\n    } else if (inInput && (dur = stderrLine.match(durPattern))) {\n      inputStack[inputIndex].duration = dur[1];\n    } else if (inInput && (audio = stderrLine.match(audioPattern))) {\n      audio = audio[1].split(', ');\n      inputStack[inputIndex].audio = audio[0];\n      inputStack[inputIndex].audio_details = audio;\n    } else if (inInput && (video = stderrLine.match(videoPattern))) {\n      video = video[1].split(', ');\n      inputStack[inputIndex].video = video[0];\n      inputStack[inputIndex].video_details = video;\n    } else if (/Output #\\d+/.test(stderrLine)) {\n      inInput = codecsObject.inInput = false;\n    } else if (/Stream mapping:|Press (\\[q\\]|ctrl-c) to stop/.test(stderrLine)) {\n      command.emit.apply(command, ['codecData'].concat(inputStack));\n      return true;\n    }\n\n    return false;\n  },\n\n\n  /**\n   * Extract progress data from ffmpeg stderr and emit 'progress' event if appropriate\n   *\n   * @param {FfmpegCommand} command event emitter\n   * @param {String} stderrLine ffmpeg stderr data\n   * @private\n   */\n  extractProgress: function(command, stderrLine) {\n    var progress = parseProgressLine(stderrLine);\n\n    if (progress) {\n      // build progress report object\n      var ret = {\n        frames: parseInt(progress.frame, 10),\n        currentFps: parseInt(progress.fps, 10),\n        currentKbps: progress.bitrate ? parseFloat(progress.bitrate.replace('kbits/s', '')) : 0,\n        targetSize: parseInt(progress.size || progress.Lsize, 10),\n        timemark: progress.time\n      };\n\n      // calculate percent progress using duration\n      if (command._ffprobeData && command._ffprobeData.format && command._ffprobeData.format.duration) {\n        var duration = Number(command._ffprobeData.format.duration);\n        if (!isNaN(duration))\n          ret.percent = (utils.timemarkToSeconds(ret.timemark) / duration) * 100;\n      }\n      command.emit('progress', ret);\n    }\n  },\n\n\n  /**\n   * Extract error message(s) from ffmpeg stderr\n   *\n   * @param {String} stderr ffmpeg stderr data\n   * @return {String}\n   * @private\n   */\n  extractError: function(stderr) {\n    // Only return the last stderr lines that don't start with a space or a square bracket\n    return stderr.split(nlRegexp).reduce(function(messages, message) {\n      if (message.charAt(0) === ' ' || message.charAt(0) === '[') {\n        return [];\n      } else {\n        messages.push(message);\n        return messages;\n      }\n    }, []).join('\\n');\n  },\n\n\n  /**\n   * Creates a line ring buffer object with the following methods:\n   * - append(str) : appends a string or buffer\n   * - get() : returns the whole string\n   * - close() : prevents further append() calls and does a last call to callbacks\n   * - callback(cb) : calls cb for each line (incl. those already in the ring)\n   *\n   * @param {Number} maxLines maximum number of lines to store (<= 0 for unlimited)\n   */\n  linesRing: function(maxLines) {\n    var cbs = [];\n    var lines = [];\n    var current = null;\n    var closed = false\n    var max = maxLines - 1;\n\n    function emit(line) {\n      cbs.forEach(function(cb) { cb(line); });\n    }\n\n    return {\n      callback: function(cb) {\n        lines.forEach(function(l) { cb(l); });\n        cbs.push(cb);\n      },\n\n      append: function(str) {\n        if (closed) return;\n        if (str instanceof Buffer) str = '' + str;\n        if (!str || str.length === 0) return;\n\n        var newLines = str.split(nlRegexp);\n\n        if (newLines.length === 1) {\n          if (current !== null) {\n            current = current + newLines.shift();\n          } else {\n            current = newLines.shift();\n          }\n        } else {\n          if (current !== null) {\n            current = current + newLines.shift();\n            emit(current);\n            lines.push(current);\n          }\n\n          current = newLines.pop();\n\n          newLines.forEach(function(l) {\n            emit(l);\n            lines.push(l);\n          });\n\n          if (max > -1 && lines.length > max) {\n            lines.splice(0, lines.length - max);\n          }\n        }\n      },\n\n      get: function() {\n        if (current !== null) {\n          return lines.concat([current]).join('\\n');\n        } else {\n          return lines.join('\\n');\n        }\n      },\n\n      close: function() {\n        if (closed) return;\n\n        if (current !== null) {\n          emit(current);\n          lines.push(current);\n\n          if (max > -1 && lines.length > max) {\n            lines.shift();\n          }\n\n          current = null;\n        }\n\n        closed = true;\n      }\n    };\n  }\n};\n","/*jshint node:true*/\n'use strict';\n\nvar utils = require('../utils');\n\n/*\n *! Input-related methods\n */\n\nmodule.exports = function(proto) {\n  /**\n   * Add an input to command\n   *\n   * Also switches \"current input\", that is the input that will be affected\n   * by subsequent input-related methods.\n   *\n   * Note: only one stream input is supported for now.\n   *\n   * @method FfmpegCommand#input\n   * @category Input\n   * @aliases mergeAdd,addInput\n   *\n   * @param {String|Readable} source input file path or readable stream\n   * @return FfmpegCommand\n   */\n  proto.mergeAdd =\n  proto.addInput =\n  proto.input = function(source) {\n    var isFile = false;\n    var isStream = false;\n\n    if (typeof source !== 'string') {\n      if (!('readable' in source) || !(source.readable)) {\n        throw new Error('Invalid input');\n      }\n\n      var hasInputStream = this._inputs.some(function(input) {\n        return input.isStream;\n      });\n\n      if (hasInputStream) {\n        throw new Error('Only one input stream is supported');\n      }\n\n      isStream = true;\n      source.pause();\n    } else {\n      var protocol = source.match(/^([a-z]{2,}):/i);\n      isFile = !protocol || protocol[0] === 'file';\n    }\n\n    this._inputs.push(this._currentInput = {\n      source: source,\n      isFile: isFile,\n      isStream: isStream,\n      options: utils.args()\n    });\n\n    return this;\n  };\n\n\n  /**\n   * Specify input format for the last specified input\n   *\n   * @method FfmpegCommand#inputFormat\n   * @category Input\n   * @aliases withInputFormat,fromFormat\n   *\n   * @param {String} format input format\n   * @return FfmpegCommand\n   */\n  proto.withInputFormat =\n  proto.inputFormat =\n  proto.fromFormat = function(format) {\n    if (!this._currentInput) {\n      throw new Error('No input specified');\n    }\n\n    this._currentInput.options('-f', format);\n    return this;\n  };\n\n\n  /**\n   * Specify input FPS for the last specified input\n   * (only valid for raw video formats)\n   *\n   * @method FfmpegCommand#inputFps\n   * @category Input\n   * @aliases withInputFps,withInputFPS,withFpsInput,withFPSInput,inputFPS,inputFps,fpsInput\n   *\n   * @param {Number} fps input FPS\n   * @return FfmpegCommand\n   */\n  proto.withInputFps =\n  proto.withInputFPS =\n  proto.withFpsInput =\n  proto.withFPSInput =\n  proto.inputFPS =\n  proto.inputFps =\n  proto.fpsInput =\n  proto.FPSInput = function(fps) {\n    if (!this._currentInput) {\n      throw new Error('No input specified');\n    }\n\n    this._currentInput.options('-r', fps);\n    return this;\n  };\n\n\n  /**\n   * Use native framerate for the last specified input\n   *\n   * @method FfmpegCommand#native\n   * @category Input\n   * @aliases nativeFramerate,withNativeFramerate\n   *\n   * @return FfmmegCommand\n   */\n  proto.nativeFramerate =\n  proto.withNativeFramerate =\n  proto.native = function() {\n    if (!this._currentInput) {\n      throw new Error('No input specified');\n    }\n\n    this._currentInput.options('-re');\n    return this;\n  };\n\n\n  /**\n   * Specify input seek time for the last specified input\n   *\n   * @method FfmpegCommand#seekInput\n   * @category Input\n   * @aliases setStartTime,seekTo\n   *\n   * @param {String|Number} seek seek time in seconds or as a '[hh:[mm:]]ss[.xxx]' string\n   * @return FfmpegCommand\n   */\n  proto.setStartTime =\n  proto.seekInput = function(seek) {\n    if (!this._currentInput) {\n      throw new Error('No input specified');\n    }\n\n    this._currentInput.options('-ss', seek);\n\n    return this;\n  };\n\n\n  /**\n   * Loop over the last specified input\n   *\n   * @method FfmpegCommand#loop\n   * @category Input\n   *\n   * @param {String|Number} [duration] loop duration in seconds or as a '[[hh:]mm:]ss[.xxx]' string\n   * @return FfmpegCommand\n   */\n  proto.loop = function(duration) {\n    if (!this._currentInput) {\n      throw new Error('No input specified');\n    }\n\n    this._currentInput.options('-loop', '1');\n\n    if (typeof duration !== 'undefined') {\n      this.duration(duration);\n    }\n\n    return this;\n  };\n};\n","/*jshint node:true*/\n'use strict';\n\nvar utils = require('../utils');\n\n\n/*\n *! Audio-related methods\n */\n\nmodule.exports = function(proto) {\n  /**\n   * Disable audio in the output\n   *\n   * @method FfmpegCommand#noAudio\n   * @category Audio\n   * @aliases withNoAudio\n   * @return FfmpegCommand\n   */\n  proto.withNoAudio =\n  proto.noAudio = function() {\n    this._currentOutput.audio.clear();\n    this._currentOutput.audioFilters.clear();\n    this._currentOutput.audio('-an');\n\n    return this;\n  };\n\n\n  /**\n   * Specify audio codec\n   *\n   * @method FfmpegCommand#audioCodec\n   * @category Audio\n   * @aliases withAudioCodec\n   *\n   * @param {String} codec audio codec name\n   * @return FfmpegCommand\n   */\n  proto.withAudioCodec =\n  proto.audioCodec = function(codec) {\n    this._currentOutput.audio('-acodec', codec);\n\n    return this;\n  };\n\n\n  /**\n   * Specify audio bitrate\n   *\n   * @method FfmpegCommand#audioBitrate\n   * @category Audio\n   * @aliases withAudioBitrate\n   *\n   * @param {String|Number} bitrate audio bitrate in kbps (with an optional 'k' suffix)\n   * @return FfmpegCommand\n   */\n  proto.withAudioBitrate =\n  proto.audioBitrate = function(bitrate) {\n    this._currentOutput.audio('-b:a', ('' + bitrate).replace(/k?$/, 'k'));\n    return this;\n  };\n\n\n  /**\n   * Specify audio channel count\n   *\n   * @method FfmpegCommand#audioChannels\n   * @category Audio\n   * @aliases withAudioChannels\n   *\n   * @param {Number} channels channel count\n   * @return FfmpegCommand\n   */\n  proto.withAudioChannels =\n  proto.audioChannels = function(channels) {\n    this._currentOutput.audio('-ac', channels);\n    return this;\n  };\n\n\n  /**\n   * Specify audio frequency\n   *\n   * @method FfmpegCommand#audioFrequency\n   * @category Audio\n   * @aliases withAudioFrequency\n   *\n   * @param {Number} freq audio frequency in Hz\n   * @return FfmpegCommand\n   */\n  proto.withAudioFrequency =\n  proto.audioFrequency = function(freq) {\n    this._currentOutput.audio('-ar', freq);\n    return this;\n  };\n\n\n  /**\n   * Specify audio quality\n   *\n   * @method FfmpegCommand#audioQuality\n   * @category Audio\n   * @aliases withAudioQuality\n   *\n   * @param {Number} quality audio quality factor\n   * @return FfmpegCommand\n   */\n  proto.withAudioQuality =\n  proto.audioQuality = function(quality) {\n    this._currentOutput.audio('-aq', quality);\n    return this;\n  };\n\n\n  /**\n   * Specify custom audio filter(s)\n   *\n   * Can be called both with one or many filters, or a filter array.\n   *\n   * @example\n   * command.audioFilters('filter1');\n   *\n   * @example\n   * command.audioFilters('filter1', 'filter2=param1=value1:param2=value2');\n   *\n   * @example\n   * command.audioFilters(['filter1', 'filter2']);\n   *\n   * @example\n   * command.audioFilters([\n   *   {\n   *     filter: 'filter1'\n   *   },\n   *   {\n   *     filter: 'filter2',\n   *     options: 'param=value:param=value'\n   *   }\n   * ]);\n   *\n   * @example\n   * command.audioFilters(\n   *   {\n   *     filter: 'filter1',\n   *     options: ['value1', 'value2']\n   *   },\n   *   {\n   *     filter: 'filter2',\n   *     options: { param1: 'value1', param2: 'value2' }\n   *   }\n   * );\n   *\n   * @method FfmpegCommand#audioFilters\n   * @aliases withAudioFilter,withAudioFilters,audioFilter\n   * @category Audio\n   *\n   * @param {...String|String[]|Object[]} filters audio filter strings, string array or\n   *   filter specification array, each with the following properties:\n   * @param {String} filters.filter filter name\n   * @param {String|String[]|Object} [filters.options] filter option string, array, or object\n   * @return FfmpegCommand\n   */\n  proto.withAudioFilter =\n  proto.withAudioFilters =\n  proto.audioFilter =\n  proto.audioFilters = function(filters) {\n    if (arguments.length > 1) {\n      filters = [].slice.call(arguments);\n    }\n\n    if (!Array.isArray(filters)) {\n      filters = [filters];\n    }\n\n    this._currentOutput.audioFilters(utils.makeFilterStrings(filters));\n    return this;\n  };\n};\n","/*jshint node:true*/\n'use strict';\n\nvar utils = require('../utils');\n\n\n/*\n *! Video-related methods\n */\n\nmodule.exports = function(proto) {\n  /**\n   * Disable video in the output\n   *\n   * @method FfmpegCommand#noVideo\n   * @category Video\n   * @aliases withNoVideo\n   *\n   * @return FfmpegCommand\n   */\n  proto.withNoVideo =\n  proto.noVideo = function() {\n    this._currentOutput.video.clear();\n    this._currentOutput.videoFilters.clear();\n    this._currentOutput.video('-vn');\n\n    return this;\n  };\n\n\n  /**\n   * Specify video codec\n   *\n   * @method FfmpegCommand#videoCodec\n   * @category Video\n   * @aliases withVideoCodec\n   *\n   * @param {String} codec video codec name\n   * @return FfmpegCommand\n   */\n  proto.withVideoCodec =\n  proto.videoCodec = function(codec) {\n    this._currentOutput.video('-vcodec', codec);\n    return this;\n  };\n\n\n  /**\n   * Specify video bitrate\n   *\n   * @method FfmpegCommand#videoBitrate\n   * @category Video\n   * @aliases withVideoBitrate\n   *\n   * @param {String|Number} bitrate video bitrate in kbps (with an optional 'k' suffix)\n   * @param {Boolean} [constant=false] enforce constant bitrate\n   * @return FfmpegCommand\n   */\n  proto.withVideoBitrate =\n  proto.videoBitrate = function(bitrate, constant) {\n    bitrate = ('' + bitrate).replace(/k?$/, 'k');\n\n    this._currentOutput.video('-b:v', bitrate);\n    if (constant) {\n      this._currentOutput.video(\n        '-maxrate', bitrate,\n        '-minrate', bitrate,\n        '-bufsize', '3M'\n      );\n    }\n\n    return this;\n  };\n\n\n  /**\n   * Specify custom video filter(s)\n   *\n   * Can be called both with one or many filters, or a filter array.\n   *\n   * @example\n   * command.videoFilters('filter1');\n   *\n   * @example\n   * command.videoFilters('filter1', 'filter2=param1=value1:param2=value2');\n   *\n   * @example\n   * command.videoFilters(['filter1', 'filter2']);\n   *\n   * @example\n   * command.videoFilters([\n   *   {\n   *     filter: 'filter1'\n   *   },\n   *   {\n   *     filter: 'filter2',\n   *     options: 'param=value:param=value'\n   *   }\n   * ]);\n   *\n   * @example\n   * command.videoFilters(\n   *   {\n   *     filter: 'filter1',\n   *     options: ['value1', 'value2']\n   *   },\n   *   {\n   *     filter: 'filter2',\n   *     options: { param1: 'value1', param2: 'value2' }\n   *   }\n   * );\n   *\n   * @method FfmpegCommand#videoFilters\n   * @category Video\n   * @aliases withVideoFilter,withVideoFilters,videoFilter\n   *\n   * @param {...String|String[]|Object[]} filters video filter strings, string array or\n   *   filter specification array, each with the following properties:\n   * @param {String} filters.filter filter name\n   * @param {String|String[]|Object} [filters.options] filter option string, array, or object\n   * @return FfmpegCommand\n   */\n  proto.withVideoFilter =\n  proto.withVideoFilters =\n  proto.videoFilter =\n  proto.videoFilters = function(filters) {\n    if (arguments.length > 1) {\n      filters = [].slice.call(arguments);\n    }\n\n    if (!Array.isArray(filters)) {\n      filters = [filters];\n    }\n\n    this._currentOutput.videoFilters(utils.makeFilterStrings(filters));\n\n    return this;\n  };\n\n\n  /**\n   * Specify output FPS\n   *\n   * @method FfmpegCommand#fps\n   * @category Video\n   * @aliases withOutputFps,withOutputFPS,withFpsOutput,withFPSOutput,withFps,withFPS,outputFPS,outputFps,fpsOutput,FPSOutput,FPS\n   *\n   * @param {Number} fps output FPS\n   * @return FfmpegCommand\n   */\n  proto.withOutputFps =\n  proto.withOutputFPS =\n  proto.withFpsOutput =\n  proto.withFPSOutput =\n  proto.withFps =\n  proto.withFPS =\n  proto.outputFPS =\n  proto.outputFps =\n  proto.fpsOutput =\n  proto.FPSOutput =\n  proto.fps =\n  proto.FPS = function(fps) {\n    this._currentOutput.video('-r', fps);\n    return this;\n  };\n\n\n  /**\n   * Only transcode a certain number of frames\n   *\n   * @method FfmpegCommand#frames\n   * @category Video\n   * @aliases takeFrames,withFrames\n   *\n   * @param {Number} frames frame count\n   * @return FfmpegCommand\n   */\n  proto.takeFrames =\n  proto.withFrames =\n  proto.frames = function(frames) {\n    this._currentOutput.video('-vframes', frames);\n    return this;\n  };\n};\n","/*jshint node:true*/\n'use strict';\n\n/*\n *! Size helpers\n */\n\n\n/**\n * Return filters to pad video to width*height,\n *\n * @param {Number} width output width\n * @param {Number} height output height\n * @param {Number} aspect video aspect ratio (without padding)\n * @param {Number} color padding color\n * @return scale/pad filters\n * @private\n */\nfunction getScalePadFilters(width, height, aspect, color) {\n  /*\n    let a be the input aspect ratio, A be the requested aspect ratio\n\n    if a > A, padding is done on top and bottom\n    if a < A, padding is done on left and right\n   */\n\n  return [\n    /*\n      In both cases, we first have to scale the input to match the requested size.\n      When using computed width/height, we truncate them to multiples of 2\n     */\n    {\n      filter: 'scale',\n      options: {\n        w: 'if(gt(a,' + aspect + '),' + width + ',trunc(' + height + '*a/2)*2)',\n        h: 'if(lt(a,' + aspect + '),' + height + ',trunc(' + width + '/a/2)*2)'\n      }\n    },\n\n    /*\n      Then we pad the scaled input to match the target size\n      (here iw and ih refer to the padding input, i.e the scaled output)\n     */\n\n    {\n      filter: 'pad',\n      options: {\n        w: width,\n        h: height,\n        x: 'if(gt(a,' + aspect + '),0,(' + width + '-iw)/2)',\n        y: 'if(lt(a,' + aspect + '),0,(' + height + '-ih)/2)',\n        color: color\n      }\n    }\n  ];\n}\n\n\n/**\n * Recompute size filters\n *\n * @param {Object} output\n * @param {String} key newly-added parameter name ('size', 'aspect' or 'pad')\n * @param {String} value newly-added parameter value\n * @return filter string array\n * @private\n */\nfunction createSizeFilters(output, key, value) {\n  // Store parameters\n  var data = output.sizeData = output.sizeData || {};\n  data[key] = value;\n\n  if (!('size' in data)) {\n    // No size requested, keep original size\n    return [];\n  }\n\n  // Try to match the different size string formats\n  var fixedSize = data.size.match(/([0-9]+)x([0-9]+)/);\n  var fixedWidth = data.size.match(/([0-9]+)x\\?/);\n  var fixedHeight = data.size.match(/\\?x([0-9]+)/);\n  var percentRatio = data.size.match(/\\b([0-9]{1,3})%/);\n  var width, height, aspect;\n\n  if (percentRatio) {\n    var ratio = Number(percentRatio[1]) / 100;\n    return [{\n      filter: 'scale',\n      options: {\n        w: 'trunc(iw*' + ratio + '/2)*2',\n        h: 'trunc(ih*' + ratio + '/2)*2'\n      }\n    }];\n  } else if (fixedSize) {\n    // Round target size to multiples of 2\n    width = Math.round(Number(fixedSize[1]) / 2) * 2;\n    height = Math.round(Number(fixedSize[2]) / 2) * 2;\n\n    aspect = width / height;\n\n    if (data.pad) {\n      return getScalePadFilters(width, height, aspect, data.pad);\n    } else {\n      // No autopad requested, rescale to target size\n      return [{ filter: 'scale', options: { w: width, h: height }}];\n    }\n  } else if (fixedWidth || fixedHeight) {\n    if ('aspect' in data) {\n      // Specified aspect ratio\n      width = fixedWidth ? fixedWidth[1] : Math.round(Number(fixedHeight[1]) * data.aspect);\n      height = fixedHeight ? fixedHeight[1] : Math.round(Number(fixedWidth[1]) / data.aspect);\n\n      // Round to multiples of 2\n      width = Math.round(width / 2) * 2;\n      height = Math.round(height / 2) * 2;\n\n      if (data.pad) {\n        return getScalePadFilters(width, height, data.aspect, data.pad);\n      } else {\n        // No autopad requested, rescale to target size\n        return [{ filter: 'scale', options: { w: width, h: height }}];\n      }\n    } else {\n      // Keep input aspect ratio\n\n      if (fixedWidth) {\n        return [{\n          filter: 'scale',\n          options: {\n            w: Math.round(Number(fixedWidth[1]) / 2) * 2,\n            h: 'trunc(ow/a/2)*2'\n          }\n        }];\n      } else {\n        return [{\n          filter: 'scale',\n          options: {\n            w: 'trunc(oh*a/2)*2',\n            h: Math.round(Number(fixedHeight[1]) / 2) * 2\n          }\n        }];\n      }\n    }\n  } else {\n    throw new Error('Invalid size specified: ' + data.size);\n  }\n}\n\n\n/*\n *! Video size-related methods\n */\n\nmodule.exports = function(proto) {\n  /**\n   * Keep display aspect ratio\n   *\n   * This method is useful when converting an input with non-square pixels to an output format\n   * that does not support non-square pixels.  It rescales the input so that the display aspect\n   * ratio is the same.\n   *\n   * @method FfmpegCommand#keepDAR\n   * @category Video size\n   * @aliases keepPixelAspect,keepDisplayAspect,keepDisplayAspectRatio\n   *\n   * @return FfmpegCommand\n   */\n  proto.keepPixelAspect = // Only for compatibility, this is not about keeping _pixel_ aspect ratio\n  proto.keepDisplayAspect =\n  proto.keepDisplayAspectRatio =\n  proto.keepDAR = function() {\n    return this.videoFilters([\n      {\n        filter: 'scale',\n        options: {\n          w: 'if(gt(sar,1),iw*sar,iw)',\n          h: 'if(lt(sar,1),ih/sar,ih)'\n        }\n      },\n      {\n        filter: 'setsar',\n        options: '1'\n      }\n    ]);\n  };\n\n\n  /**\n   * Set output size\n   *\n   * The 'size' parameter can have one of 4 forms:\n   * - 'X%': rescale to xx % of the original size\n   * - 'WxH': specify width and height\n   * - 'Wx?': specify width and compute height from input aspect ratio\n   * - '?xH': specify height and compute width from input aspect ratio\n   *\n   * Note: both dimensions will be truncated to multiples of 2.\n   *\n   * @method FfmpegCommand#size\n   * @category Video size\n   * @aliases withSize,setSize\n   *\n   * @param {String} size size string, eg. '33%', '320x240', '320x?', '?x240'\n   * @return FfmpegCommand\n   */\n  proto.withSize =\n  proto.setSize =\n  proto.size = function(size) {\n    var filters = createSizeFilters(this._currentOutput, 'size', size);\n\n    this._currentOutput.sizeFilters.clear();\n    this._currentOutput.sizeFilters(filters);\n\n    return this;\n  };\n\n\n  /**\n   * Set output aspect ratio\n   *\n   * @method FfmpegCommand#aspect\n   * @category Video size\n   * @aliases withAspect,withAspectRatio,setAspect,setAspectRatio,aspectRatio\n   *\n   * @param {String|Number} aspect aspect ratio (number or 'X:Y' string)\n   * @return FfmpegCommand\n   */\n  proto.withAspect =\n  proto.withAspectRatio =\n  proto.setAspect =\n  proto.setAspectRatio =\n  proto.aspect =\n  proto.aspectRatio = function(aspect) {\n    var a = Number(aspect);\n    if (isNaN(a)) {\n      var match = aspect.match(/^(\\d+):(\\d+)$/);\n      if (match) {\n        a = Number(match[1]) / Number(match[2]);\n      } else {\n        throw new Error('Invalid aspect ratio: ' + aspect);\n      }\n    }\n\n    var filters = createSizeFilters(this._currentOutput, 'aspect', a);\n\n    this._currentOutput.sizeFilters.clear();\n    this._currentOutput.sizeFilters(filters);\n\n    return this;\n  };\n\n\n  /**\n   * Enable auto-padding the output\n   *\n   * @method FfmpegCommand#autopad\n   * @category Video size\n   * @aliases applyAutopadding,applyAutoPadding,applyAutopad,applyAutoPad,withAutopadding,withAutoPadding,withAutopad,withAutoPad,autoPad\n   *\n   * @param {Boolean} [pad=true] enable/disable auto-padding\n   * @param {String} [color='black'] pad color\n   */\n  proto.applyAutopadding =\n  proto.applyAutoPadding =\n  proto.applyAutopad =\n  proto.applyAutoPad =\n  proto.withAutopadding =\n  proto.withAutoPadding =\n  proto.withAutopad =\n  proto.withAutoPad =\n  proto.autoPad =\n  proto.autopad = function(pad, color) {\n    // Allow autopad(color)\n    if (typeof pad === 'string') {\n      color = pad;\n      pad = true;\n    }\n\n    // Allow autopad() and autopad(undefined, color)\n    if (typeof pad === 'undefined') {\n      pad = true;\n    }\n\n    var filters = createSizeFilters(this._currentOutput, 'pad', pad ? color || 'black' : false);\n\n    this._currentOutput.sizeFilters.clear();\n    this._currentOutput.sizeFilters(filters);\n\n    return this;\n  };\n};\n","/*jshint node:true*/\n'use strict';\n\nvar utils = require('../utils');\n\n\n/*\n *! Output-related methods\n */\n\nmodule.exports = function(proto) {\n  /**\n   * Add output\n   *\n   * @method FfmpegCommand#output\n   * @category Output\n   * @aliases addOutput\n   *\n   * @param {String|Writable} target target file path or writable stream\n   * @param {Object} [pipeopts={}] pipe options (only applies to streams)\n   * @return FfmpegCommand\n   */\n  proto.addOutput =\n  proto.output = function(target, pipeopts) {\n    var isFile = false;\n\n    if (!target && this._currentOutput) {\n      // No target is only allowed when called from constructor\n      throw new Error('Invalid output');\n    }\n\n    if (target && typeof target !== 'string') {\n      if (!('writable' in target) || !(target.writable)) {\n        throw new Error('Invalid output');\n      }\n    } else if (typeof target === 'string') {\n      var protocol = target.match(/^([a-z]{2,}):/i);\n      isFile = !protocol || protocol[0] === 'file';\n    }\n\n    if (target && !('target' in this._currentOutput)) {\n      // For backwards compatibility, set target for first output\n      this._currentOutput.target = target;\n      this._currentOutput.isFile = isFile;\n      this._currentOutput.pipeopts = pipeopts || {};\n    } else {\n      if (target && typeof target !== 'string') {\n        var hasOutputStream = this._outputs.some(function(output) {\n          return typeof output.target !== 'string';\n        });\n\n        if (hasOutputStream) {\n          throw new Error('Only one output stream is supported');\n        }\n      }\n\n      this._outputs.push(this._currentOutput = {\n        target: target,\n        isFile: isFile,\n        flags: {},\n        pipeopts: pipeopts || {}\n      });\n\n      var self = this;\n      ['audio', 'audioFilters', 'video', 'videoFilters', 'sizeFilters', 'options'].forEach(function(key) {\n        self._currentOutput[key] = utils.args();\n      });\n\n      if (!target) {\n        // Call from constructor: remove target key\n        delete this._currentOutput.target;\n      }\n    }\n\n    return this;\n  };\n\n\n  /**\n   * Specify output seek time\n   *\n   * @method FfmpegCommand#seek\n   * @category Input\n   * @aliases seekOutput\n   *\n   * @param {String|Number} seek seek time in seconds or as a '[hh:[mm:]]ss[.xxx]' string\n   * @return FfmpegCommand\n   */\n  proto.seekOutput =\n  proto.seek = function(seek) {\n    this._currentOutput.options('-ss', seek);\n    return this;\n  };\n\n\n  /**\n   * Set output duration\n   *\n   * @method FfmpegCommand#duration\n   * @category Output\n   * @aliases withDuration,setDuration\n   *\n   * @param {String|Number} duration duration in seconds or as a '[[hh:]mm:]ss[.xxx]' string\n   * @return FfmpegCommand\n   */\n  proto.withDuration =\n  proto.setDuration =\n  proto.duration = function(duration) {\n    this._currentOutput.options('-t', duration);\n    return this;\n  };\n\n\n  /**\n   * Set output format\n   *\n   * @method FfmpegCommand#format\n   * @category Output\n   * @aliases toFormat,withOutputFormat,outputFormat\n   *\n   * @param {String} format output format name\n   * @return FfmpegCommand\n   */\n  proto.toFormat =\n  proto.withOutputFormat =\n  proto.outputFormat =\n  proto.format = function(format) {\n    this._currentOutput.options('-f', format);\n    return this;\n  };\n\n\n  /**\n   * Add stream mapping to output\n   *\n   * @method FfmpegCommand#map\n   * @category Output\n   *\n   * @param {String} spec stream specification string, with optional square brackets\n   * @return FfmpegCommand\n   */\n  proto.map = function(spec) {\n    this._currentOutput.options('-map', spec.replace(utils.streamRegexp, '[$1]'));\n    return this;\n  };\n\n\n  /**\n   * Run flvtool2/flvmeta on output\n   *\n   * @method FfmpegCommand#flvmeta\n   * @category Output\n   * @aliases updateFlvMetadata\n   *\n   * @return FfmpegCommand\n   */\n  proto.updateFlvMetadata =\n  proto.flvmeta = function() {\n    this._currentOutput.flags.flvmeta = true;\n    return this;\n  };\n};\n","/*jshint node:true*/\n'use strict';\n\nvar utils = require('../utils');\n\n\n/*\n *! Custom options methods\n */\n\nmodule.exports = function(proto) {\n  /**\n   * Add custom input option(s)\n   *\n   * When passing a single string or an array, each string containing two\n   * words is split (eg. inputOptions('-option value') is supported) for\n   * compatibility reasons.  This is not the case when passing more than\n   * one argument.\n   *\n   * @example\n   * command.inputOptions('option1');\n   *\n   * @example\n   * command.inputOptions('option1', 'option2');\n   *\n   * @example\n   * command.inputOptions(['option1', 'option2']);\n   *\n   * @method FfmpegCommand#inputOptions\n   * @category Custom options\n   * @aliases addInputOption,addInputOptions,withInputOption,withInputOptions,inputOption\n   *\n   * @param {...String} options option string(s) or string array\n   * @return FfmpegCommand\n   */\n  proto.addInputOption =\n  proto.addInputOptions =\n  proto.withInputOption =\n  proto.withInputOptions =\n  proto.inputOption =\n  proto.inputOptions = function(options) {\n    if (!this._currentInput) {\n      throw new Error('No input specified');\n    }\n\n    var doSplit = true;\n\n    if (arguments.length > 1) {\n      options = [].slice.call(arguments);\n      doSplit = false;\n    }\n\n    if (!Array.isArray(options)) {\n      options = [options];\n    }\n\n    this._currentInput.options(options.reduce(function(options, option) {\n      var split = String(option).split(' ');\n\n      if (doSplit && split.length === 2) {\n        options.push(split[0], split[1]);\n      } else {\n        options.push(option);\n      }\n\n      return options;\n    }, []));\n    return this;\n  };\n\n\n  /**\n   * Add custom output option(s)\n   *\n   * @example\n   * command.outputOptions('option1');\n   *\n   * @example\n   * command.outputOptions('option1', 'option2');\n   *\n   * @example\n   * command.outputOptions(['option1', 'option2']);\n   *\n   * @method FfmpegCommand#outputOptions\n   * @category Custom options\n   * @aliases addOutputOption,addOutputOptions,addOption,addOptions,withOutputOption,withOutputOptions,withOption,withOptions,outputOption\n   *\n   * @param {...String} options option string(s) or string array\n   * @return FfmpegCommand\n   */\n  proto.addOutputOption =\n  proto.addOutputOptions =\n  proto.addOption =\n  proto.addOptions =\n  proto.withOutputOption =\n  proto.withOutputOptions =\n  proto.withOption =\n  proto.withOptions =\n  proto.outputOption =\n  proto.outputOptions = function(options) {\n    var doSplit = true;\n\n    if (arguments.length > 1) {\n      options = [].slice.call(arguments);\n      doSplit = false;\n    }\n\n    if (!Array.isArray(options)) {\n      options = [options];\n    }\n\n    this._currentOutput.options(options.reduce(function(options, option) {\n      var split = String(option).split(' ');\n\n      if (doSplit && split.length === 2) {\n        options.push(split[0], split[1]);\n      } else {\n        options.push(option);\n      }\n\n      return options;\n    }, []));\n    return this;\n  };\n\n\n  /**\n   * Specify a complex filtergraph\n   *\n   * Calling this method will override any previously set filtergraph, but you can set\n   * as many filters as needed in one call.\n   *\n   * @example <caption>Overlay an image over a video (using a filtergraph string)</caption>\n   *   ffmpeg()\n   *     .input('video.avi')\n   *     .input('image.png')\n   *     .complexFilter('[0:v][1:v]overlay[out]', ['out']);\n   *\n   * @example <caption>Overlay an image over a video (using a filter array)</caption>\n   *   ffmpeg()\n   *     .input('video.avi')\n   *     .input('image.png')\n   *     .complexFilter([{\n   *       filter: 'overlay',\n   *       inputs: ['0:v', '1:v'],\n   *       outputs: ['out']\n   *     }], ['out']);\n   *\n   * @example <caption>Split video into RGB channels and output a 3x1 video with channels side to side</caption>\n   *  ffmpeg()\n   *    .input('video.avi')\n   *    .complexFilter([\n   *      // Duplicate video stream 3 times into streams a, b, and c\n   *      { filter: 'split', options: '3', outputs: ['a', 'b', 'c'] },\n   *\n   *      // Create stream 'red' by cancelling green and blue channels from stream 'a'\n   *      { filter: 'lutrgb', options: { g: 0, b: 0 }, inputs: 'a', outputs: 'red' },\n   *\n   *      // Create stream 'green' by cancelling red and blue channels from stream 'b'\n   *      { filter: 'lutrgb', options: { r: 0, b: 0 }, inputs: 'b', outputs: 'green' },\n   *\n   *      // Create stream 'blue' by cancelling red and green channels from stream 'c'\n   *      { filter: 'lutrgb', options: { r: 0, g: 0 }, inputs: 'c', outputs: 'blue' },\n   *\n   *      // Pad stream 'red' to 3x width, keeping the video on the left, and name output 'padded'\n   *      { filter: 'pad', options: { w: 'iw*3', h: 'ih' }, inputs: 'red', outputs: 'padded' },\n   *\n   *      // Overlay 'green' onto 'padded', moving it to the center, and name output 'redgreen'\n   *      { filter: 'overlay', options: { x: 'w', y: 0 }, inputs: ['padded', 'green'], outputs: 'redgreen'},\n   *\n   *      // Overlay 'blue' onto 'redgreen', moving it to the right\n   *      { filter: 'overlay', options: { x: '2*w', y: 0 }, inputs: ['redgreen', 'blue']},\n   *    ]);\n   *\n   * @method FfmpegCommand#complexFilter\n   * @category Custom options\n   * @aliases filterGraph\n   *\n   * @param {String|Array} spec filtergraph string or array of filter specification\n   *   objects, each having the following properties:\n   * @param {String} spec.filter filter name\n   * @param {String|Array} [spec.inputs] (array of) input stream specifier(s) for the filter,\n   *   defaults to ffmpeg automatically choosing the first unused matching streams\n   * @param {String|Array} [spec.outputs] (array of) output stream specifier(s) for the filter,\n   *   defaults to ffmpeg automatically assigning the output to the output file\n   * @param {Object|String|Array} [spec.options] filter options, can be omitted to not set any options\n   * @param {Array} [map] (array of) stream specifier(s) from the graph to include in\n   *   ffmpeg output, defaults to ffmpeg automatically choosing the first matching streams.\n   * @return FfmpegCommand\n   */\n  proto.filterGraph =\n  proto.complexFilter = function(spec, map) {\n    this._complexFilters.clear();\n\n    if (!Array.isArray(spec)) {\n      spec = [spec];\n    }\n\n    this._complexFilters('-filter_complex', utils.makeFilterStrings(spec).join(';'));\n\n    if (Array.isArray(map)) {\n      var self = this;\n      map.forEach(function(streamSpec) {\n        self._complexFilters('-map', streamSpec.replace(utils.streamRegexp, '[$1]'));\n      });\n    } else if (typeof map === 'string') {\n      this._complexFilters('-map', map.replace(utils.streamRegexp, '[$1]'));\n    }\n\n    return this;\n  };\n};\n","/*jshint node:true*/\n'use strict';\n\nvar path = require('path');\n\n/*\n *! Miscellaneous methods\n */\n\nmodule.exports = function(proto) {\n  /**\n   * Use preset\n   *\n   * @method FfmpegCommand#preset\n   * @category Miscellaneous\n   * @aliases usingPreset\n   *\n   * @param {String|Function} preset preset name or preset function\n   */\n  proto.usingPreset =\n  proto.preset = function(preset) {\n    if (typeof preset === 'function') {\n      preset(this);\n    } else {\n      try {\n        var modulePath = path.join(this.options.presets, preset);\n        var module = require(modulePath);\n\n        if (typeof module.load === 'function') {\n          module.load(this);\n        } else {\n          throw new Error('preset ' + modulePath + ' has no load() function');\n        }\n      } catch (err) {\n        throw new Error('preset ' + modulePath + ' could not be loaded: ' + err.message);\n      }\n    }\n\n    return this;\n  };\n};\n","/*global setImmediate: false, setTimeout: false, console: false */\n(function () {\n\n    var async = {};\n\n    // global on the server, window in the browser\n    var root, previous_async;\n\n    root = this;\n    if (root != null) {\n      previous_async = root.async;\n    }\n\n    async.noConflict = function () {\n        root.async = previous_async;\n        return async;\n    };\n\n    function only_once(fn) {\n        var called = false;\n        return function() {\n            if (called) throw new Error(\"Callback was already called.\");\n            called = true;\n            fn.apply(root, arguments);\n        }\n    }\n\n    //// cross-browser compatiblity functions ////\n\n    var _each = function (arr, iterator) {\n        if (arr.forEach) {\n            return arr.forEach(iterator);\n        }\n        for (var i = 0; i < arr.length; i += 1) {\n            iterator(arr[i], i, arr);\n        }\n    };\n\n    var _map = function (arr, iterator) {\n        if (arr.map) {\n            return arr.map(iterator);\n        }\n        var results = [];\n        _each(arr, function (x, i, a) {\n            results.push(iterator(x, i, a));\n        });\n        return results;\n    };\n\n    var _reduce = function (arr, iterator, memo) {\n        if (arr.reduce) {\n            return arr.reduce(iterator, memo);\n        }\n        _each(arr, function (x, i, a) {\n            memo = iterator(memo, x, i, a);\n        });\n        return memo;\n    };\n\n    var _keys = function (obj) {\n        if (Object.keys) {\n            return Object.keys(obj);\n        }\n        var keys = [];\n        for (var k in obj) {\n            if (obj.hasOwnProperty(k)) {\n                keys.push(k);\n            }\n        }\n        return keys;\n    };\n\n    //// exported async module functions ////\n\n    //// nextTick implementation with browser-compatible fallback ////\n    if (typeof process === 'undefined' || !(process.nextTick)) {\n        if (typeof setImmediate === 'function') {\n            async.nextTick = function (fn) {\n                // not a direct alias for IE10 compatibility\n                setImmediate(fn);\n            };\n            async.setImmediate = async.nextTick;\n        }\n        else {\n            async.nextTick = function (fn) {\n                setTimeout(fn, 0);\n            };\n            async.setImmediate = async.nextTick;\n        }\n    }\n    else {\n        async.nextTick = process.nextTick;\n        if (typeof setImmediate !== 'undefined') {\n            async.setImmediate = function (fn) {\n              // not a direct alias for IE10 compatibility\n              setImmediate(fn);\n            };\n        }\n        else {\n            async.setImmediate = async.nextTick;\n        }\n    }\n\n    async.each = function (arr, iterator, callback) {\n        callback = callback || function () {};\n        if (!arr.length) {\n            return callback();\n        }\n        var completed = 0;\n        _each(arr, function (x) {\n            iterator(x, only_once(function (err) {\n                if (err) {\n                    callback(err);\n                    callback = function () {};\n                }\n                else {\n                    completed += 1;\n                    if (completed >= arr.length) {\n                        callback(null);\n                    }\n                }\n            }));\n        });\n    };\n    async.forEach = async.each;\n\n    async.eachSeries = function (arr, iterator, callback) {\n        callback = callback || function () {};\n        if (!arr.length) {\n            return callback();\n        }\n        var completed = 0;\n        var iterate = function () {\n            iterator(arr[completed], function (err) {\n                if (err) {\n                    callback(err);\n                    callback = function () {};\n                }\n                else {\n                    completed += 1;\n                    if (completed >= arr.length) {\n                        callback(null);\n                    }\n                    else {\n                        iterate();\n                    }\n                }\n            });\n        };\n        iterate();\n    };\n    async.forEachSeries = async.eachSeries;\n\n    async.eachLimit = function (arr, limit, iterator, callback) {\n        var fn = _eachLimit(limit);\n        fn.apply(null, [arr, iterator, callback]);\n    };\n    async.forEachLimit = async.eachLimit;\n\n    var _eachLimit = function (limit) {\n\n        return function (arr, iterator, callback) {\n            callback = callback || function () {};\n            if (!arr.length || limit <= 0) {\n                return callback();\n            }\n            var completed = 0;\n            var started = 0;\n            var running = 0;\n\n            (function replenish () {\n                if (completed >= arr.length) {\n                    return callback();\n                }\n\n                while (running < limit && started < arr.length) {\n                    started += 1;\n                    running += 1;\n                    iterator(arr[started - 1], function (err) {\n                        if (err) {\n                            callback(err);\n                            callback = function () {};\n                        }\n                        else {\n                            completed += 1;\n                            running -= 1;\n                            if (completed >= arr.length) {\n                                callback();\n                            }\n                            else {\n                                replenish();\n                            }\n                        }\n                    });\n                }\n            })();\n        };\n    };\n\n\n    var doParallel = function (fn) {\n        return function () {\n            var args = Array.prototype.slice.call(arguments);\n            return fn.apply(null, [async.each].concat(args));\n        };\n    };\n    var doParallelLimit = function(limit, fn) {\n        return function () {\n            var args = Array.prototype.slice.call(arguments);\n            return fn.apply(null, [_eachLimit(limit)].concat(args));\n        };\n    };\n    var doSeries = function (fn) {\n        return function () {\n            var args = Array.prototype.slice.call(arguments);\n            return fn.apply(null, [async.eachSeries].concat(args));\n        };\n    };\n\n\n    var _asyncMap = function (eachfn, arr, iterator, callback) {\n        var results = [];\n        arr = _map(arr, function (x, i) {\n            return {index: i, value: x};\n        });\n        eachfn(arr, function (x, callback) {\n            iterator(x.value, function (err, v) {\n                results[x.index] = v;\n                callback(err);\n            });\n        }, function (err) {\n            callback(err, results);\n        });\n    };\n    async.map = doParallel(_asyncMap);\n    async.mapSeries = doSeries(_asyncMap);\n    async.mapLimit = function (arr, limit, iterator, callback) {\n        return _mapLimit(limit)(arr, iterator, callback);\n    };\n\n    var _mapLimit = function(limit) {\n        return doParallelLimit(limit, _asyncMap);\n    };\n\n    // reduce only has a series version, as doing reduce in parallel won't\n    // work in many situations.\n    async.reduce = function (arr, memo, iterator, callback) {\n        async.eachSeries(arr, function (x, callback) {\n            iterator(memo, x, function (err, v) {\n                memo = v;\n                callback(err);\n            });\n        }, function (err) {\n            callback(err, memo);\n        });\n    };\n    // inject alias\n    async.inject = async.reduce;\n    // foldl alias\n    async.foldl = async.reduce;\n\n    async.reduceRight = function (arr, memo, iterator, callback) {\n        var reversed = _map(arr, function (x) {\n            return x;\n        }).reverse();\n        async.reduce(reversed, memo, iterator, callback);\n    };\n    // foldr alias\n    async.foldr = async.reduceRight;\n\n    var _filter = function (eachfn, arr, iterator, callback) {\n        var results = [];\n        arr = _map(arr, function (x, i) {\n            return {index: i, value: x};\n        });\n        eachfn(arr, function (x, callback) {\n            iterator(x.value, function (v) {\n                if (v) {\n                    results.push(x);\n                }\n                callback();\n            });\n        }, function (err) {\n            callback(_map(results.sort(function (a, b) {\n                return a.index - b.index;\n            }), function (x) {\n                return x.value;\n            }));\n        });\n    };\n    async.filter = doParallel(_filter);\n    async.filterSeries = doSeries(_filter);\n    // select alias\n    async.select = async.filter;\n    async.selectSeries = async.filterSeries;\n\n    var _reject = function (eachfn, arr, iterator, callback) {\n        var results = [];\n        arr = _map(arr, function (x, i) {\n            return {index: i, value: x};\n        });\n        eachfn(arr, function (x, callback) {\n            iterator(x.value, function (v) {\n                if (!v) {\n                    results.push(x);\n                }\n                callback();\n            });\n        }, function (err) {\n            callback(_map(results.sort(function (a, b) {\n                return a.index - b.index;\n            }), function (x) {\n                return x.value;\n            }));\n        });\n    };\n    async.reject = doParallel(_reject);\n    async.rejectSeries = doSeries(_reject);\n\n    var _detect = function (eachfn, arr, iterator, main_callback) {\n        eachfn(arr, function (x, callback) {\n            iterator(x, function (result) {\n                if (result) {\n                    main_callback(x);\n                    main_callback = function () {};\n                }\n                else {\n                    callback();\n                }\n            });\n        }, function (err) {\n            main_callback();\n        });\n    };\n    async.detect = doParallel(_detect);\n    async.detectSeries = doSeries(_detect);\n\n    async.some = function (arr, iterator, main_callback) {\n        async.each(arr, function (x, callback) {\n            iterator(x, function (v) {\n                if (v) {\n                    main_callback(true);\n                    main_callback = function () {};\n                }\n                callback();\n            });\n        }, function (err) {\n            main_callback(false);\n        });\n    };\n    // any alias\n    async.any = async.some;\n\n    async.every = function (arr, iterator, main_callback) {\n        async.each(arr, function (x, callback) {\n            iterator(x, function (v) {\n                if (!v) {\n                    main_callback(false);\n                    main_callback = function () {};\n                }\n                callback();\n            });\n        }, function (err) {\n            main_callback(true);\n        });\n    };\n    // all alias\n    async.all = async.every;\n\n    async.sortBy = function (arr, iterator, callback) {\n        async.map(arr, function (x, callback) {\n            iterator(x, function (err, criteria) {\n                if (err) {\n                    callback(err);\n                }\n                else {\n                    callback(null, {value: x, criteria: criteria});\n                }\n            });\n        }, function (err, results) {\n            if (err) {\n                return callback(err);\n            }\n            else {\n                var fn = function (left, right) {\n                    var a = left.criteria, b = right.criteria;\n                    return a < b ? -1 : a > b ? 1 : 0;\n                };\n                callback(null, _map(results.sort(fn), function (x) {\n                    return x.value;\n                }));\n            }\n        });\n    };\n\n    async.auto = function (tasks, callback) {\n        callback = callback || function () {};\n        var keys = _keys(tasks);\n        if (!keys.length) {\n            return callback(null);\n        }\n\n        var results = {};\n\n        var listeners = [];\n        var addListener = function (fn) {\n            listeners.unshift(fn);\n        };\n        var removeListener = function (fn) {\n            for (var i = 0; i < listeners.length; i += 1) {\n                if (listeners[i] === fn) {\n                    listeners.splice(i, 1);\n                    return;\n                }\n            }\n        };\n        var taskComplete = function () {\n            _each(listeners.slice(0), function (fn) {\n                fn();\n            });\n        };\n\n        addListener(function () {\n            if (_keys(results).length === keys.length) {\n                callback(null, results);\n                callback = function () {};\n            }\n        });\n\n        _each(keys, function (k) {\n            var task = (tasks[k] instanceof Function) ? [tasks[k]]: tasks[k];\n            var taskCallback = function (err) {\n                var args = Array.prototype.slice.call(arguments, 1);\n                if (args.length <= 1) {\n                    args = args[0];\n                }\n                if (err) {\n                    var safeResults = {};\n                    _each(_keys(results), function(rkey) {\n                        safeResults[rkey] = results[rkey];\n                    });\n                    safeResults[k] = args;\n                    callback(err, safeResults);\n                    // stop subsequent errors hitting callback multiple times\n                    callback = function () {};\n                }\n                else {\n                    results[k] = args;\n                    async.setImmediate(taskComplete);\n                }\n            };\n            var requires = task.slice(0, Math.abs(task.length - 1)) || [];\n            var ready = function () {\n                return _reduce(requires, function (a, x) {\n                    return (a && results.hasOwnProperty(x));\n                }, true) && !results.hasOwnProperty(k);\n            };\n            if (ready()) {\n                task[task.length - 1](taskCallback, results);\n            }\n            else {\n                var listener = function () {\n                    if (ready()) {\n                        removeListener(listener);\n                        task[task.length - 1](taskCallback, results);\n                    }\n                };\n                addListener(listener);\n            }\n        });\n    };\n\n    async.waterfall = function (tasks, callback) {\n        callback = callback || function () {};\n        if (tasks.constructor !== Array) {\n          var err = new Error('First argument to waterfall must be an array of functions');\n          return callback(err);\n        }\n        if (!tasks.length) {\n            return callback();\n        }\n        var wrapIterator = function (iterator) {\n            return function (err) {\n                if (err) {\n                    callback.apply(null, arguments);\n                    callback = function () {};\n                }\n                else {\n                    var args = Array.prototype.slice.call(arguments, 1);\n                    var next = iterator.next();\n                    if (next) {\n                        args.push(wrapIterator(next));\n                    }\n                    else {\n                        args.push(callback);\n                    }\n                    async.setImmediate(function () {\n                        iterator.apply(null, args);\n                    });\n                }\n            };\n        };\n        wrapIterator(async.iterator(tasks))();\n    };\n\n    var _parallel = function(eachfn, tasks, callback) {\n        callback = callback || function () {};\n        if (tasks.constructor === Array) {\n            eachfn.map(tasks, function (fn, callback) {\n                if (fn) {\n                    fn(function (err) {\n                        var args = Array.prototype.slice.call(arguments, 1);\n                        if (args.length <= 1) {\n                            args = args[0];\n                        }\n                        callback.call(null, err, args);\n                    });\n                }\n            }, callback);\n        }\n        else {\n            var results = {};\n            eachfn.each(_keys(tasks), function (k, callback) {\n                tasks[k](function (err) {\n                    var args = Array.prototype.slice.call(arguments, 1);\n                    if (args.length <= 1) {\n                        args = args[0];\n                    }\n                    results[k] = args;\n                    callback(err);\n                });\n            }, function (err) {\n                callback(err, results);\n            });\n        }\n    };\n\n    async.parallel = function (tasks, callback) {\n        _parallel({ map: async.map, each: async.each }, tasks, callback);\n    };\n\n    async.parallelLimit = function(tasks, limit, callback) {\n        _parallel({ map: _mapLimit(limit), each: _eachLimit(limit) }, tasks, callback);\n    };\n\n    async.series = function (tasks, callback) {\n        callback = callback || function () {};\n        if (tasks.constructor === Array) {\n            async.mapSeries(tasks, function (fn, callback) {\n                if (fn) {\n                    fn(function (err) {\n                        var args = Array.prototype.slice.call(arguments, 1);\n                        if (args.length <= 1) {\n                            args = args[0];\n                        }\n                        callback.call(null, err, args);\n                    });\n                }\n            }, callback);\n        }\n        else {\n            var results = {};\n            async.eachSeries(_keys(tasks), function (k, callback) {\n                tasks[k](function (err) {\n                    var args = Array.prototype.slice.call(arguments, 1);\n                    if (args.length <= 1) {\n                        args = args[0];\n                    }\n                    results[k] = args;\n                    callback(err);\n                });\n            }, function (err) {\n                callback(err, results);\n            });\n        }\n    };\n\n    async.iterator = function (tasks) {\n        var makeCallback = function (index) {\n            var fn = function () {\n                if (tasks.length) {\n                    tasks[index].apply(null, arguments);\n                }\n                return fn.next();\n            };\n            fn.next = function () {\n                return (index < tasks.length - 1) ? makeCallback(index + 1): null;\n            };\n            return fn;\n        };\n        return makeCallback(0);\n    };\n\n    async.apply = function (fn) {\n        var args = Array.prototype.slice.call(arguments, 1);\n        return function () {\n            return fn.apply(\n                null, args.concat(Array.prototype.slice.call(arguments))\n            );\n        };\n    };\n\n    var _concat = function (eachfn, arr, fn, callback) {\n        var r = [];\n        eachfn(arr, function (x, cb) {\n            fn(x, function (err, y) {\n                r = r.concat(y || []);\n                cb(err);\n            });\n        }, function (err) {\n            callback(err, r);\n        });\n    };\n    async.concat = doParallel(_concat);\n    async.concatSeries = doSeries(_concat);\n\n    async.whilst = function (test, iterator, callback) {\n        if (test()) {\n            iterator(function (err) {\n                if (err) {\n                    return callback(err);\n                }\n                async.whilst(test, iterator, callback);\n            });\n        }\n        else {\n            callback();\n        }\n    };\n\n    async.doWhilst = function (iterator, test, callback) {\n        iterator(function (err) {\n            if (err) {\n                return callback(err);\n            }\n            if (test()) {\n                async.doWhilst(iterator, test, callback);\n            }\n            else {\n                callback();\n            }\n        });\n    };\n\n    async.until = function (test, iterator, callback) {\n        if (!test()) {\n            iterator(function (err) {\n                if (err) {\n                    return callback(err);\n                }\n                async.until(test, iterator, callback);\n            });\n        }\n        else {\n            callback();\n        }\n    };\n\n    async.doUntil = function (iterator, test, callback) {\n        iterator(function (err) {\n            if (err) {\n                return callback(err);\n            }\n            if (!test()) {\n                async.doUntil(iterator, test, callback);\n            }\n            else {\n                callback();\n            }\n        });\n    };\n\n    async.queue = function (worker, concurrency) {\n        if (concurrency === undefined) {\n            concurrency = 1;\n        }\n        function _insert(q, data, pos, callback) {\n          if(data.constructor !== Array) {\n              data = [data];\n          }\n          _each(data, function(task) {\n              var item = {\n                  data: task,\n                  callback: typeof callback === 'function' ? callback : null\n              };\n\n              if (pos) {\n                q.tasks.unshift(item);\n              } else {\n                q.tasks.push(item);\n              }\n\n              if (q.saturated && q.tasks.length === concurrency) {\n                  q.saturated();\n              }\n              async.setImmediate(q.process);\n          });\n        }\n\n        var workers = 0;\n        var q = {\n            tasks: [],\n            concurrency: concurrency,\n            saturated: null,\n            empty: null,\n            drain: null,\n            push: function (data, callback) {\n              _insert(q, data, false, callback);\n            },\n            unshift: function (data, callback) {\n              _insert(q, data, true, callback);\n            },\n            process: function () {\n                if (workers < q.concurrency && q.tasks.length) {\n                    var task = q.tasks.shift();\n                    if (q.empty && q.tasks.length === 0) {\n                        q.empty();\n                    }\n                    workers += 1;\n                    var next = function () {\n                        workers -= 1;\n                        if (task.callback) {\n                            task.callback.apply(task, arguments);\n                        }\n                        if (q.drain && q.tasks.length + workers === 0) {\n                            q.drain();\n                        }\n                        q.process();\n                    };\n                    var cb = only_once(next);\n                    worker(task.data, cb);\n                }\n            },\n            length: function () {\n                return q.tasks.length;\n            },\n            running: function () {\n                return workers;\n            }\n        };\n        return q;\n    };\n\n    async.cargo = function (worker, payload) {\n        var working     = false,\n            tasks       = [];\n\n        var cargo = {\n            tasks: tasks,\n            payload: payload,\n            saturated: null,\n            empty: null,\n            drain: null,\n            push: function (data, callback) {\n                if(data.constructor !== Array) {\n                    data = [data];\n                }\n                _each(data, function(task) {\n                    tasks.push({\n                        data: task,\n                        callback: typeof callback === 'function' ? callback : null\n                    });\n                    if (cargo.saturated && tasks.length === payload) {\n                        cargo.saturated();\n                    }\n                });\n                async.setImmediate(cargo.process);\n            },\n            process: function process() {\n                if (working) return;\n                if (tasks.length === 0) {\n                    if(cargo.drain) cargo.drain();\n                    return;\n                }\n\n                var ts = typeof payload === 'number'\n                            ? tasks.splice(0, payload)\n                            : tasks.splice(0);\n\n                var ds = _map(ts, function (task) {\n                    return task.data;\n                });\n\n                if(cargo.empty) cargo.empty();\n                working = true;\n                worker(ds, function () {\n                    working = false;\n\n                    var args = arguments;\n                    _each(ts, function (data) {\n                        if (data.callback) {\n                            data.callback.apply(null, args);\n                        }\n                    });\n\n                    process();\n                });\n            },\n            length: function () {\n                return tasks.length;\n            },\n            running: function () {\n                return working;\n            }\n        };\n        return cargo;\n    };\n\n    var _console_fn = function (name) {\n        return function (fn) {\n            var args = Array.prototype.slice.call(arguments, 1);\n            fn.apply(null, args.concat([function (err) {\n                var args = Array.prototype.slice.call(arguments, 1);\n                if (typeof console !== 'undefined') {\n                    if (err) {\n                        if (console.error) {\n                            console.error(err);\n                        }\n                    }\n                    else if (console[name]) {\n                        _each(args, function (x) {\n                            console[name](x);\n                        });\n                    }\n                }\n            }]));\n        };\n    };\n    async.log = _console_fn('log');\n    async.dir = _console_fn('dir');\n    /*async.info = _console_fn('info');\n    async.warn = _console_fn('warn');\n    async.error = _console_fn('error');*/\n\n    async.memoize = function (fn, hasher) {\n        var memo = {};\n        var queues = {};\n        hasher = hasher || function (x) {\n            return x;\n        };\n        var memoized = function () {\n            var args = Array.prototype.slice.call(arguments);\n            var callback = args.pop();\n            var key = hasher.apply(null, args);\n            if (key in memo) {\n                callback.apply(null, memo[key]);\n            }\n            else if (key in queues) {\n                queues[key].push(callback);\n            }\n            else {\n                queues[key] = [callback];\n                fn.apply(null, args.concat([function () {\n                    memo[key] = arguments;\n                    var q = queues[key];\n                    delete queues[key];\n                    for (var i = 0, l = q.length; i < l; i++) {\n                      q[i].apply(null, arguments);\n                    }\n                }]));\n            }\n        };\n        memoized.memo = memo;\n        memoized.unmemoized = fn;\n        return memoized;\n    };\n\n    async.unmemoize = function (fn) {\n      return function () {\n        return (fn.unmemoized || fn).apply(null, arguments);\n      };\n    };\n\n    async.times = function (count, iterator, callback) {\n        var counter = [];\n        for (var i = 0; i < count; i++) {\n            counter.push(i);\n        }\n        return async.map(counter, iterator, callback);\n    };\n\n    async.timesSeries = function (count, iterator, callback) {\n        var counter = [];\n        for (var i = 0; i < count; i++) {\n            counter.push(i);\n        }\n        return async.mapSeries(counter, iterator, callback);\n    };\n\n    async.compose = function (/* functions... */) {\n        var fns = Array.prototype.reverse.call(arguments);\n        return function () {\n            var that = this;\n            var args = Array.prototype.slice.call(arguments);\n            var callback = args.pop();\n            async.reduce(fns, args, function (newargs, fn, cb) {\n                fn.apply(that, newargs.concat([function () {\n                    var err = arguments[0];\n                    var nextargs = Array.prototype.slice.call(arguments, 1);\n                    cb(err, nextargs);\n                }]))\n            },\n            function (err, results) {\n                callback.apply(that, [err].concat(results));\n            });\n        };\n    };\n\n    var _applyEach = function (eachfn, fns /*args...*/) {\n        var go = function () {\n            var that = this;\n            var args = Array.prototype.slice.call(arguments);\n            var callback = args.pop();\n            return eachfn(fns, function (fn, cb) {\n                fn.apply(that, args.concat([cb]));\n            },\n            callback);\n        };\n        if (arguments.length > 2) {\n            var args = Array.prototype.slice.call(arguments, 2);\n            return go.apply(this, args);\n        }\n        else {\n            return go;\n        }\n    };\n    async.applyEach = doParallel(_applyEach);\n    async.applyEachSeries = doSeries(_applyEach);\n\n    async.forever = function (fn, callback) {\n        function next(err) {\n            if (err) {\n                if (callback) {\n                    return callback(err);\n                }\n                throw err;\n            }\n            fn(next);\n        }\n        next();\n    };\n\n    // AMD / RequireJS\n    if (typeof define !== 'undefined' && define.amd) {\n        define([], function () {\n            return async;\n        });\n    }\n    // Node.js\n    else if (typeof module !== 'undefined' && module.exports) {\n        module.exports = async;\n    }\n    // included directly via <script> tag\n    else {\n        root.async = async;\n    }\n\n}());\n","/*jshint node:true*/\n'use strict';\n\nvar spawn = require('child_process').spawn;\nvar path = require('path');\nvar fs = require('fs');\nvar async = require('async');\nvar utils = require('./utils');\n\n/*\n *! Processor methods\n */\n\n\n/**\n * Run ffprobe asynchronously and store data in command\n *\n * @param {FfmpegCommand} command\n * @private\n */\nfunction runFfprobe(command) {\n  const inputProbeIndex = 0;\n  if (command._inputs[inputProbeIndex].isStream) {\n    // Don't probe input streams as this will consume them\n    return;\n  }\n  command.ffprobe(inputProbeIndex, function(err, data) {\n    command._ffprobeData = data;\n  });\n}\n\n\nmodule.exports = function(proto) {\n  /**\n   * Emitted just after ffmpeg has been spawned.\n   *\n   * @event FfmpegCommand#start\n   * @param {String} command ffmpeg command line\n   */\n\n  /**\n   * Emitted when ffmpeg reports progress information\n   *\n   * @event FfmpegCommand#progress\n   * @param {Object} progress progress object\n   * @param {Number} progress.frames number of frames transcoded\n   * @param {Number} progress.currentFps current processing speed in frames per second\n   * @param {Number} progress.currentKbps current output generation speed in kilobytes per second\n   * @param {Number} progress.targetSize current output file size\n   * @param {String} progress.timemark current video timemark\n   * @param {Number} [progress.percent] processing progress (may not be available depending on input)\n   */\n\n  /**\n   * Emitted when ffmpeg outputs to stderr\n   *\n   * @event FfmpegCommand#stderr\n   * @param {String} line stderr output line\n   */\n\n  /**\n   * Emitted when ffmpeg reports input codec data\n   *\n   * @event FfmpegCommand#codecData\n   * @param {Object} codecData codec data object\n   * @param {String} codecData.format input format name\n   * @param {String} codecData.audio input audio codec name\n   * @param {String} codecData.audio_details input audio codec parameters\n   * @param {String} codecData.video input video codec name\n   * @param {String} codecData.video_details input video codec parameters\n   */\n\n  /**\n   * Emitted when an error happens when preparing or running a command\n   *\n   * @event FfmpegCommand#error\n   * @param {Error} error error object, with optional properties 'inputStreamError' / 'outputStreamError' for errors on their respective streams\n   * @param {String|null} stdout ffmpeg stdout, unless outputting to a stream\n   * @param {String|null} stderr ffmpeg stderr\n   */\n\n  /**\n   * Emitted when a command finishes processing\n   *\n   * @event FfmpegCommand#end\n   * @param {Array|String|null} [filenames|stdout] generated filenames when taking screenshots, ffmpeg stdout when not outputting to a stream, null otherwise\n   * @param {String|null} stderr ffmpeg stderr\n   */\n\n\n  /**\n   * Spawn an ffmpeg process\n   *\n   * The 'options' argument may contain the following keys:\n   * - 'niceness': specify process niceness, ignored on Windows (default: 0)\n   * - `cwd`: change working directory\n   * - 'captureStdout': capture stdout and pass it to 'endCB' as its 2nd argument (default: false)\n   * - 'stdoutLines': override command limit (default: use command limit)\n   *\n   * The 'processCB' callback, if present, is called as soon as the process is created and\n   * receives a nodejs ChildProcess object.  It may not be called at all if an error happens\n   * before spawning the process.\n   *\n   * The 'endCB' callback is called either when an error occurs or when the ffmpeg process finishes.\n   *\n   * @method FfmpegCommand#_spawnFfmpeg\n   * @param {Array} args ffmpeg command line argument list\n   * @param {Object} [options] spawn options (see above)\n   * @param {Function} [processCB] callback called with process object and stdout/stderr ring buffers when process has been created\n   * @param {Function} endCB callback called with error (if applicable) and stdout/stderr ring buffers when process finished\n   * @private\n   */\n  proto._spawnFfmpeg = function(args, options, processCB, endCB) {\n    // Enable omitting options\n    if (typeof options === 'function') {\n      endCB = processCB;\n      processCB = options;\n      options = {};\n    }\n\n    // Enable omitting processCB\n    if (typeof endCB === 'undefined') {\n      endCB = processCB;\n      processCB = function() {};\n    }\n\n    var maxLines = 'stdoutLines' in options ? options.stdoutLines : this.options.stdoutLines;\n\n    // Find ffmpeg\n    this._getFfmpegPath(function(err, command) {\n      if (err) {\n        return endCB(err);\n      } else if (!command || command.length === 0) {\n        return endCB(new Error('Cannot find ffmpeg'));\n      }\n\n      // Apply niceness\n      if (options.niceness && options.niceness !== 0 && !utils.isWindows) {\n        args.unshift('-n', options.niceness, command);\n        command = 'nice';\n      }\n\n      var stdoutRing = utils.linesRing(maxLines);\n      var stdoutClosed = false;\n\n      var stderrRing = utils.linesRing(maxLines);\n      var stderrClosed = false;\n\n      // Spawn process\n      var ffmpegProc = spawn(command, args, options);\n\n      if (ffmpegProc.stderr) {\n        ffmpegProc.stderr.setEncoding('utf8');\n      }\n\n      ffmpegProc.on('error', function(err) {\n        endCB(err);\n      });\n\n      // Ensure we wait for captured streams to end before calling endCB\n      var exitError = null;\n      function handleExit(err) {\n        if (err) {\n          exitError = err;\n        }\n\n        if (processExited && (stdoutClosed || !options.captureStdout) && stderrClosed) {\n          endCB(exitError, stdoutRing, stderrRing);\n        }\n      }\n\n      // Handle process exit\n      var processExited = false;\n      ffmpegProc.on('exit', function(code, signal) {\n        processExited = true;\n\n        if (signal) {\n          handleExit(new Error('ffmpeg was killed with signal ' + signal));\n        } else if (code) {\n          handleExit(new Error('ffmpeg exited with code ' + code));\n        } else {\n          handleExit();\n        }\n      });\n\n      // Capture stdout if specified\n      if (options.captureStdout) {\n        ffmpegProc.stdout.on('data', function(data) {\n          stdoutRing.append(data);\n        });\n\n        ffmpegProc.stdout.on('close', function() {\n          stdoutRing.close();\n          stdoutClosed = true;\n          handleExit();\n        });\n      }\n\n      // Capture stderr if specified\n      ffmpegProc.stderr.on('data', function(data) {\n        stderrRing.append(data);\n      });\n\n      ffmpegProc.stderr.on('close', function() {\n        stderrRing.close();\n        stderrClosed = true;\n        handleExit();\n      });\n\n      // Call process callback\n      processCB(ffmpegProc, stdoutRing, stderrRing);\n    });\n  };\n\n\n  /**\n   * Build the argument list for an ffmpeg command\n   *\n   * @method FfmpegCommand#_getArguments\n   * @return argument list\n   * @private\n   */\n  proto._getArguments = function() {\n    var complexFilters = this._complexFilters.get();\n\n    var fileOutput = this._outputs.some(function(output) {\n      return output.isFile;\n    });\n\n    return [].concat(\n        // Inputs and input options\n        this._inputs.reduce(function(args, input) {\n          var source = (typeof input.source === 'string') ? input.source : 'pipe:0';\n\n          // For each input, add input options, then '-i <source>'\n          return args.concat(\n            input.options.get(),\n            ['-i', source]\n          );\n        }, []),\n\n        // Global options\n        this._global.get(),\n\n        // Overwrite if we have file outputs\n        fileOutput ? ['-y'] : [],\n\n        // Complex filters\n        complexFilters,\n\n        // Outputs, filters and output options\n        this._outputs.reduce(function(args, output) {\n          var sizeFilters = utils.makeFilterStrings(output.sizeFilters.get());\n          var audioFilters = output.audioFilters.get();\n          var videoFilters = output.videoFilters.get().concat(sizeFilters);\n          var outputArg;\n\n          if (!output.target) {\n            outputArg = [];\n          } else if (typeof output.target === 'string') {\n            outputArg = [output.target];\n          } else {\n            outputArg = ['pipe:1'];\n          }\n\n          return args.concat(\n            output.audio.get(),\n            audioFilters.length ? ['-filter:a', audioFilters.join(',')] : [],\n            output.video.get(),\n            videoFilters.length ? ['-filter:v', videoFilters.join(',')] : [],\n            output.options.get(),\n            outputArg\n          );\n        }, [])\n      );\n  };\n\n\n  /**\n   * Prepare execution of an ffmpeg command\n   *\n   * Checks prerequisites for the execution of the command (codec/format availability, flvtool...),\n   * then builds the argument list for ffmpeg and pass them to 'callback'.\n   *\n   * @method FfmpegCommand#_prepare\n   * @param {Function} callback callback with signature (err, args)\n   * @param {Boolean} [readMetadata=false] read metadata before processing\n   * @private\n   */\n  proto._prepare = function(callback, readMetadata) {\n    var self = this;\n\n    async.waterfall([\n      // Check codecs and formats\n      function(cb) {\n        self._checkCapabilities(cb);\n      },\n\n      // Read metadata if required\n      function(cb) {\n        if (!readMetadata) {\n          return cb();\n        }\n\n        self.ffprobe(0, function(err, data) {\n          if (!err) {\n            self._ffprobeData = data;\n          }\n\n          cb();\n        });\n      },\n\n      // Check for flvtool2/flvmeta if necessary\n      function(cb) {\n        var flvmeta = self._outputs.some(function(output) {\n          // Remove flvmeta flag on non-file output\n          if (output.flags.flvmeta && !output.isFile) {\n            self.logger.warn('Updating flv metadata is only supported for files');\n            output.flags.flvmeta = false;\n          }\n\n          return output.flags.flvmeta;\n        });\n\n        if (flvmeta) {\n          self._getFlvtoolPath(function(err) {\n            cb(err);\n          });\n        } else {\n          cb();\n        }\n      },\n\n      // Build argument list\n      function(cb) {\n        var args;\n        try {\n          args = self._getArguments();\n        } catch(e) {\n          return cb(e);\n        }\n\n        cb(null, args);\n      },\n\n      // Add \"-strict experimental\" option where needed\n      function(args, cb) {\n        self.availableEncoders(function(err, encoders) {\n          for (var i = 0; i < args.length; i++) {\n            if (args[i] === '-acodec' || args[i] === '-vcodec') {\n              i++;\n\n              if ((args[i] in encoders) && encoders[args[i]].experimental) {\n                args.splice(i + 1, 0, '-strict', 'experimental');\n                i += 2;\n              }\n            }\n          }\n\n          cb(null, args);\n        });\n      }\n    ], callback);\n\n    if (!readMetadata) {\n      // Read metadata as soon as 'progress' listeners are added\n\n      if (this.listeners('progress').length > 0) {\n        // Read metadata in parallel\n        runFfprobe(this);\n      } else {\n        // Read metadata as soon as the first 'progress' listener is added\n        this.once('newListener', function(event) {\n          if (event === 'progress') {\n            runFfprobe(this);\n          }\n        });\n      }\n    }\n  };\n\n\n  /**\n   * Run ffmpeg command\n   *\n   * @method FfmpegCommand#run\n   * @category Processing\n   * @aliases exec,execute\n   */\n  proto.exec =\n  proto.execute =\n  proto.run = function() {\n    var self = this;\n\n    // Check if at least one output is present\n    var outputPresent = this._outputs.some(function(output) {\n      return 'target' in output;\n    });\n\n    if (!outputPresent) {\n      throw new Error('No output specified');\n    }\n\n    // Get output stream if any\n    var outputStream = this._outputs.filter(function(output) {\n      return typeof output.target !== 'string';\n    })[0];\n\n    // Get input stream if any\n    var inputStream = this._inputs.filter(function(input) {\n      return typeof input.source !== 'string';\n    })[0];\n\n    // Ensure we send 'end' or 'error' only once\n    var ended = false;\n    function emitEnd(err, stdout, stderr) {\n      if (!ended) {\n        ended = true;\n\n        if (err) {\n          self.emit('error', err, stdout, stderr);\n        } else {\n          self.emit('end', stdout, stderr);\n        }\n      }\n    }\n\n    self._prepare(function(err, args) {\n      if (err) {\n        return emitEnd(err);\n      }\n\n      // Run ffmpeg\n      self._spawnFfmpeg(\n        args,\n        {\n          captureStdout: !outputStream,\n          niceness: self.options.niceness,\n          cwd: self.options.cwd,\n          windowsHide: true\n        }, \n\n        function processCB(ffmpegProc, stdoutRing, stderrRing) {\n          self.ffmpegProc = ffmpegProc;\n          self.emit('start', 'ffmpeg ' + args.join(' '));\n\n          // Pipe input stream if any\n          if (inputStream) {\n            inputStream.source.on('error', function(err) {\n              var reportingErr = new Error('Input stream error: ' + err.message);\n              reportingErr.inputStreamError = err;\n              emitEnd(reportingErr);\n              ffmpegProc.kill();\n            });\n\n            inputStream.source.resume();\n            inputStream.source.pipe(ffmpegProc.stdin);\n\n            // Set stdin error handler on ffmpeg (prevents nodejs catching the error, but\n            // ffmpeg will fail anyway, so no need to actually handle anything)\n            ffmpegProc.stdin.on('error', function() {});\n          }\n\n          // Setup timeout if requested\n          if (self.options.timeout) {\n            self.processTimer = setTimeout(function() {\n              var msg = 'process ran into a timeout (' + self.options.timeout + 's)';\n\n              emitEnd(new Error(msg), stdoutRing.get(), stderrRing.get());\n              ffmpegProc.kill();\n            }, self.options.timeout * 1000);\n          }\n\n\n          if (outputStream) {\n            // Pipe ffmpeg stdout to output stream\n            ffmpegProc.stdout.pipe(outputStream.target, outputStream.pipeopts);\n\n            // Handle output stream events\n            outputStream.target.on('close', function() {\n              self.logger.debug('Output stream closed, scheduling kill for ffmpeg process');\n\n              // Don't kill process yet, to give a chance to ffmpeg to\n              // terminate successfully first  This is necessary because\n              // under load, the process 'exit' event sometimes happens\n              // after the output stream 'close' event.\n              setTimeout(function() {\n                emitEnd(new Error('Output stream closed'));\n                ffmpegProc.kill();\n              }, 20);\n            });\n\n            outputStream.target.on('error', function(err) {\n              self.logger.debug('Output stream error, killing ffmpeg process');\n              var reportingErr = new Error('Output stream error: ' + err.message);\n              reportingErr.outputStreamError = err;\n              emitEnd(reportingErr, stdoutRing.get(), stderrRing.get());\n              ffmpegProc.kill('SIGKILL');\n            });\n          }\n\n          // Setup stderr handling\n          if (stderrRing) {\n\n            // 'stderr' event\n            if (self.listeners('stderr').length) {\n              stderrRing.callback(function(line) {\n                self.emit('stderr', line);\n              });\n            }\n\n            // 'codecData' event\n            if (self.listeners('codecData').length) {\n              var codecDataSent = false;\n              var codecObject = {};\n\n              stderrRing.callback(function(line) {\n                if (!codecDataSent)\n                  codecDataSent = utils.extractCodecData(self, line, codecObject);\n              });\n            }\n\n            // 'progress' event\n            if (self.listeners('progress').length) {\n              stderrRing.callback(function(line) {\n                utils.extractProgress(self, line);\n              });\n            }\n          }\n        },\n\n        function endCB(err, stdoutRing, stderrRing) {\n          clearTimeout(self.processTimer);\n          delete self.ffmpegProc;\n\n          if (err) {\n            if (err.message.match(/ffmpeg exited with code/)) {\n              // Add ffmpeg error message\n              err.message += ': ' + utils.extractError(stderrRing.get());\n            }\n\n            emitEnd(err, stdoutRing.get(), stderrRing.get());\n          } else {\n            // Find out which outputs need flv metadata\n            var flvmeta = self._outputs.filter(function(output) {\n              return output.flags.flvmeta;\n            });\n\n            if (flvmeta.length) {\n              self._getFlvtoolPath(function(err, flvtool) {\n                if (err) {\n                  return emitEnd(err);\n                }\n\n                async.each(\n                  flvmeta,\n                  function(output, cb) {\n                    spawn(flvtool, ['-U', output.target], {windowsHide: true})\n                      .on('error', function(err) {\n                        cb(new Error('Error running ' + flvtool + ' on ' + output.target + ': ' + err.message));\n                      })\n                      .on('exit', function(code, signal) {\n                        if (code !== 0 || signal) {\n                          cb(\n                            new Error(flvtool + ' ' +\n                              (signal ? 'received signal ' + signal\n                                      : 'exited with code ' + code)) +\n                              ' when running on ' + output.target\n                          );\n                        } else {\n                          cb();\n                        }\n                      });\n                  },\n                  function(err) {\n                    if (err) {\n                      emitEnd(err);\n                    } else {\n                      emitEnd(null, stdoutRing.get(), stderrRing.get());\n                    }\n                  }\n                );\n              });\n            } else {\n              emitEnd(null, stdoutRing.get(), stderrRing.get());\n            }\n          }\n        }\n      );\n    });\n\n    return this;\n  };\n\n\n  /**\n   * Renice current and/or future ffmpeg processes\n   *\n   * Ignored on Windows platforms.\n   *\n   * @method FfmpegCommand#renice\n   * @category Processing\n   *\n   * @param {Number} [niceness=0] niceness value between -20 (highest priority) and 20 (lowest priority)\n   * @return FfmpegCommand\n   */\n  proto.renice = function(niceness) {\n    if (!utils.isWindows) {\n      niceness = niceness || 0;\n\n      if (niceness < -20 || niceness > 20) {\n        this.logger.warn('Invalid niceness value: ' + niceness + ', must be between -20 and 20');\n      }\n\n      niceness = Math.min(20, Math.max(-20, niceness));\n      this.options.niceness = niceness;\n\n      if (this.ffmpegProc) {\n        var logger = this.logger;\n        var pid = this.ffmpegProc.pid;\n        var renice = spawn('renice', [niceness, '-p', pid], {windowsHide: true});\n\n        renice.on('error', function(err) {\n          logger.warn('could not renice process ' + pid + ': ' + err.message);\n        });\n\n        renice.on('exit', function(code, signal) {\n          if (signal) {\n            logger.warn('could not renice process ' + pid + ': renice was killed by signal ' + signal);\n          } else if (code) {\n            logger.warn('could not renice process ' + pid + ': renice exited with ' + code);\n          } else {\n            logger.info('successfully reniced process ' + pid + ' to ' + niceness + ' niceness');\n          }\n        });\n      }\n    }\n\n    return this;\n  };\n\n\n  /**\n   * Kill current ffmpeg process, if any\n   *\n   * @method FfmpegCommand#kill\n   * @category Processing\n   *\n   * @param {String} [signal=SIGKILL] signal name\n   * @return FfmpegCommand\n   */\n  proto.kill = function(signal) {\n    if (!this.ffmpegProc) {\n      this.logger.warn('No running ffmpeg process, cannot send signal');\n    } else {\n      this.ffmpegProc.kill(signal || 'SIGKILL');\n    }\n\n    return this;\n  };\n};\n","/*jshint node:true*/\n'use strict';\n\nvar fs = require('fs');\nvar path = require('path');\nvar async = require('async');\nvar utils = require('./utils');\n\n/*\n *! Capability helpers\n */\n\nvar avCodecRegexp = /^\\s*([D ])([E ])([VAS])([S ])([D ])([T ]) ([^ ]+) +(.*)$/;\nvar ffCodecRegexp = /^\\s*([D\\.])([E\\.])([VAS])([I\\.])([L\\.])([S\\.]) ([^ ]+) +(.*)$/;\nvar ffEncodersRegexp = /\\(encoders:([^\\)]+)\\)/;\nvar ffDecodersRegexp = /\\(decoders:([^\\)]+)\\)/;\nvar encodersRegexp = /^\\s*([VAS\\.])([F\\.])([S\\.])([X\\.])([B\\.])([D\\.]) ([^ ]+) +(.*)$/;\nvar formatRegexp = /^\\s*([D ])([E ])\\s+([^ ]+)\\s+(.*)$/;\nvar lineBreakRegexp = /\\r\\n|\\r|\\n/;\nvar filterRegexp = /^(?: [T\\.][S\\.][C\\.] )?([^ ]+) +(AA?|VV?|\\|)->(AA?|VV?|\\|) +(.*)$/;\n\nvar cache = {};\n\nmodule.exports = function(proto) {\n  /**\n   * Manually define the ffmpeg binary full path.\n   *\n   * @method FfmpegCommand#setFfmpegPath\n   *\n   * @param {String} ffmpegPath The full path to the ffmpeg binary.\n   * @return FfmpegCommand\n   */\n  proto.setFfmpegPath = function(ffmpegPath) {\n    cache.ffmpegPath = ffmpegPath;\n    return this;\n  };\n\n  /**\n   * Manually define the ffprobe binary full path.\n   *\n   * @method FfmpegCommand#setFfprobePath\n   *\n   * @param {String} ffprobePath The full path to the ffprobe binary.\n   * @return FfmpegCommand\n   */\n  proto.setFfprobePath = function(ffprobePath) {\n    cache.ffprobePath = ffprobePath;\n    return this;\n  };\n\n  /**\n   * Manually define the flvtool2/flvmeta binary full path.\n   *\n   * @method FfmpegCommand#setFlvtoolPath\n   *\n   * @param {String} flvtool The full path to the flvtool2 or flvmeta binary.\n   * @return FfmpegCommand\n   */\n  proto.setFlvtoolPath = function(flvtool) {\n    cache.flvtoolPath = flvtool;\n    return this;\n  };\n\n  /**\n   * Forget executable paths\n   *\n   * (only used for testing purposes)\n   *\n   * @method FfmpegCommand#_forgetPaths\n   * @private\n   */\n  proto._forgetPaths = function() {\n    delete cache.ffmpegPath;\n    delete cache.ffprobePath;\n    delete cache.flvtoolPath;\n  };\n\n  /**\n   * Check for ffmpeg availability\n   *\n   * If the FFMPEG_PATH environment variable is set, try to use it.\n   * If it is unset or incorrect, try to find ffmpeg in the PATH instead.\n   *\n   * @method FfmpegCommand#_getFfmpegPath\n   * @param {Function} callback callback with signature (err, path)\n   * @private\n   */\n  proto._getFfmpegPath = function(callback) {\n    if ('ffmpegPath' in cache) {\n      return callback(null, cache.ffmpegPath);\n    }\n\n    async.waterfall([\n      // Try FFMPEG_PATH\n      function(cb) {\n        if (process.env.FFMPEG_PATH) {\n          fs.exists(process.env.FFMPEG_PATH, function(exists) {\n            if (exists) {\n              cb(null, process.env.FFMPEG_PATH);\n            } else {\n              cb(null, '');\n            }\n          });\n        } else {\n          cb(null, '');\n        }\n      },\n\n      // Search in the PATH\n      function(ffmpeg, cb) {\n        if (ffmpeg.length) {\n          return cb(null, ffmpeg);\n        }\n\n        utils.which('ffmpeg', function(err, ffmpeg) {\n          cb(err, ffmpeg);\n        });\n      }\n    ], function(err, ffmpeg) {\n      if (err) {\n        callback(err);\n      } else {\n        callback(null, cache.ffmpegPath = (ffmpeg || ''));\n      }\n    });\n  };\n\n\n  /**\n   * Check for ffprobe availability\n   *\n   * If the FFPROBE_PATH environment variable is set, try to use it.\n   * If it is unset or incorrect, try to find ffprobe in the PATH instead.\n   * If this still fails, try to find ffprobe in the same directory as ffmpeg.\n   *\n   * @method FfmpegCommand#_getFfprobePath\n   * @param {Function} callback callback with signature (err, path)\n   * @private\n   */\n  proto._getFfprobePath = function(callback) {\n    var self = this;\n\n    if ('ffprobePath' in cache) {\n      return callback(null, cache.ffprobePath);\n    }\n\n    async.waterfall([\n      // Try FFPROBE_PATH\n      function(cb) {\n        if (process.env.FFPROBE_PATH) {\n          fs.exists(process.env.FFPROBE_PATH, function(exists) {\n            cb(null, exists ? process.env.FFPROBE_PATH : '');\n          });\n        } else {\n          cb(null, '');\n        }\n      },\n\n      // Search in the PATH\n      function(ffprobe, cb) {\n        if (ffprobe.length) {\n          return cb(null, ffprobe);\n        }\n\n        utils.which('ffprobe', function(err, ffprobe) {\n          cb(err, ffprobe);\n        });\n      },\n\n      // Search in the same directory as ffmpeg\n      function(ffprobe, cb) {\n        if (ffprobe.length) {\n          return cb(null, ffprobe);\n        }\n\n        self._getFfmpegPath(function(err, ffmpeg) {\n          if (err) {\n            cb(err);\n          } else if (ffmpeg.length) {\n            var name = utils.isWindows ? 'ffprobe.exe' : 'ffprobe';\n            var ffprobe = path.join(path.dirname(ffmpeg), name);\n            fs.exists(ffprobe, function(exists) {\n              cb(null, exists ? ffprobe : '');\n            });\n          } else {\n            cb(null, '');\n          }\n        });\n      }\n    ], function(err, ffprobe) {\n      if (err) {\n        callback(err);\n      } else {\n        callback(null, cache.ffprobePath = (ffprobe || ''));\n      }\n    });\n  };\n\n\n  /**\n   * Check for flvtool2/flvmeta availability\n   *\n   * If the FLVTOOL2_PATH or FLVMETA_PATH environment variable are set, try to use them.\n   * If both are either unset or incorrect, try to find flvtool2 or flvmeta in the PATH instead.\n   *\n   * @method FfmpegCommand#_getFlvtoolPath\n   * @param {Function} callback callback with signature (err, path)\n   * @private\n   */\n   proto._getFlvtoolPath = function(callback) {\n    if ('flvtoolPath' in cache) {\n      return callback(null, cache.flvtoolPath);\n    }\n\n    async.waterfall([\n      // Try FLVMETA_PATH\n      function(cb) {\n        if (process.env.FLVMETA_PATH) {\n          fs.exists(process.env.FLVMETA_PATH, function(exists) {\n            cb(null, exists ? process.env.FLVMETA_PATH : '');\n          });\n        } else {\n          cb(null, '');\n        }\n      },\n\n      // Try FLVTOOL2_PATH\n      function(flvtool, cb) {\n        if (flvtool.length) {\n          return cb(null, flvtool);\n        }\n\n        if (process.env.FLVTOOL2_PATH) {\n          fs.exists(process.env.FLVTOOL2_PATH, function(exists) {\n            cb(null, exists ? process.env.FLVTOOL2_PATH : '');\n          });\n        } else {\n          cb(null, '');\n        }\n      },\n\n      // Search for flvmeta in the PATH\n      function(flvtool, cb) {\n        if (flvtool.length) {\n          return cb(null, flvtool);\n        }\n\n        utils.which('flvmeta', function(err, flvmeta) {\n          cb(err, flvmeta);\n        });\n      },\n\n      // Search for flvtool2 in the PATH\n      function(flvtool, cb) {\n        if (flvtool.length) {\n          return cb(null, flvtool);\n        }\n\n        utils.which('flvtool2', function(err, flvtool2) {\n          cb(err, flvtool2);\n        });\n      },\n    ], function(err, flvtool) {\n      if (err) {\n        callback(err);\n      } else {\n        callback(null, cache.flvtoolPath = (flvtool || ''));\n      }\n    });\n  };\n\n\n  /**\n   * A callback passed to {@link FfmpegCommand#availableFilters}.\n   *\n   * @callback FfmpegCommand~filterCallback\n   * @param {Error|null} err error object or null if no error happened\n   * @param {Object} filters filter object with filter names as keys and the following\n   *   properties for each filter:\n   * @param {String} filters.description filter description\n   * @param {String} filters.input input type, one of 'audio', 'video' and 'none'\n   * @param {Boolean} filters.multipleInputs whether the filter supports multiple inputs\n   * @param {String} filters.output output type, one of 'audio', 'video' and 'none'\n   * @param {Boolean} filters.multipleOutputs whether the filter supports multiple outputs\n   */\n\n  /**\n   * Query ffmpeg for available filters\n   *\n   * @method FfmpegCommand#availableFilters\n   * @category Capabilities\n   * @aliases getAvailableFilters\n   *\n   * @param {FfmpegCommand~filterCallback} callback callback function\n   */\n  proto.availableFilters =\n  proto.getAvailableFilters = function(callback) {\n    if ('filters' in cache) {\n      return callback(null, cache.filters);\n    }\n\n    this._spawnFfmpeg(['-filters'], { captureStdout: true, stdoutLines: 0 }, function (err, stdoutRing) {\n      if (err) {\n        return callback(err);\n      }\n\n      var stdout = stdoutRing.get();\n      var lines = stdout.split('\\n');\n      var data = {};\n      var types = { A: 'audio', V: 'video', '|': 'none' };\n\n      lines.forEach(function(line) {\n        var match = line.match(filterRegexp);\n        if (match) {\n          data[match[1]] = {\n            description: match[4],\n            input: types[match[2].charAt(0)],\n            multipleInputs: match[2].length > 1,\n            output: types[match[3].charAt(0)],\n            multipleOutputs: match[3].length > 1\n          };\n        }\n      });\n\n      callback(null, cache.filters = data);\n    });\n  };\n\n\n  /**\n   * A callback passed to {@link FfmpegCommand#availableCodecs}.\n   *\n   * @callback FfmpegCommand~codecCallback\n   * @param {Error|null} err error object or null if no error happened\n   * @param {Object} codecs codec object with codec names as keys and the following\n   *   properties for each codec (more properties may be available depending on the\n   *   ffmpeg version used):\n   * @param {String} codecs.description codec description\n   * @param {Boolean} codecs.canDecode whether the codec is able to decode streams\n   * @param {Boolean} codecs.canEncode whether the codec is able to encode streams\n   */\n\n  /**\n   * Query ffmpeg for available codecs\n   *\n   * @method FfmpegCommand#availableCodecs\n   * @category Capabilities\n   * @aliases getAvailableCodecs\n   *\n   * @param {FfmpegCommand~codecCallback} callback callback function\n   */\n  proto.availableCodecs =\n  proto.getAvailableCodecs = function(callback) {\n    if ('codecs' in cache) {\n      return callback(null, cache.codecs);\n    }\n\n    this._spawnFfmpeg(['-codecs'], { captureStdout: true, stdoutLines: 0 }, function(err, stdoutRing) {\n      if (err) {\n        return callback(err);\n      }\n\n      var stdout = stdoutRing.get();\n      var lines = stdout.split(lineBreakRegexp);\n      var data = {};\n\n      lines.forEach(function(line) {\n        var match = line.match(avCodecRegexp);\n        if (match && match[7] !== '=') {\n          data[match[7]] = {\n            type: { 'V': 'video', 'A': 'audio', 'S': 'subtitle' }[match[3]],\n            description: match[8],\n            canDecode: match[1] === 'D',\n            canEncode: match[2] === 'E',\n            drawHorizBand: match[4] === 'S',\n            directRendering: match[5] === 'D',\n            weirdFrameTruncation: match[6] === 'T'\n          };\n        }\n\n        match = line.match(ffCodecRegexp);\n        if (match && match[7] !== '=') {\n          var codecData = data[match[7]] = {\n            type: { 'V': 'video', 'A': 'audio', 'S': 'subtitle' }[match[3]],\n            description: match[8],\n            canDecode: match[1] === 'D',\n            canEncode: match[2] === 'E',\n            intraFrameOnly: match[4] === 'I',\n            isLossy: match[5] === 'L',\n            isLossless: match[6] === 'S'\n          };\n\n          var encoders = codecData.description.match(ffEncodersRegexp);\n          encoders = encoders ? encoders[1].trim().split(' ') : [];\n\n          var decoders = codecData.description.match(ffDecodersRegexp);\n          decoders = decoders ? decoders[1].trim().split(' ') : [];\n\n          if (encoders.length || decoders.length) {\n            var coderData = {};\n            utils.copy(codecData, coderData);\n            delete coderData.canEncode;\n            delete coderData.canDecode;\n\n            encoders.forEach(function(name) {\n              data[name] = {};\n              utils.copy(coderData, data[name]);\n              data[name].canEncode = true;\n            });\n\n            decoders.forEach(function(name) {\n              if (name in data) {\n                data[name].canDecode = true;\n              } else {\n                data[name] = {};\n                utils.copy(coderData, data[name]);\n                data[name].canDecode = true;\n              }\n            });\n          }\n        }\n      });\n\n      callback(null, cache.codecs = data);\n    });\n  };\n\n\n  /**\n   * A callback passed to {@link FfmpegCommand#availableEncoders}.\n   *\n   * @callback FfmpegCommand~encodersCallback\n   * @param {Error|null} err error object or null if no error happened\n   * @param {Object} encoders encoders object with encoder names as keys and the following\n   *   properties for each encoder:\n   * @param {String} encoders.description codec description\n   * @param {Boolean} encoders.type \"audio\", \"video\" or \"subtitle\"\n   * @param {Boolean} encoders.frameMT whether the encoder is able to do frame-level multithreading\n   * @param {Boolean} encoders.sliceMT whether the encoder is able to do slice-level multithreading\n   * @param {Boolean} encoders.experimental whether the encoder is experimental\n   * @param {Boolean} encoders.drawHorizBand whether the encoder supports draw_horiz_band\n   * @param {Boolean} encoders.directRendering whether the encoder supports direct encoding method 1\n   */\n\n  /**\n   * Query ffmpeg for available encoders\n   *\n   * @method FfmpegCommand#availableEncoders\n   * @category Capabilities\n   * @aliases getAvailableEncoders\n   *\n   * @param {FfmpegCommand~encodersCallback} callback callback function\n   */\n  proto.availableEncoders =\n  proto.getAvailableEncoders = function(callback) {\n    if ('encoders' in cache) {\n      return callback(null, cache.encoders);\n    }\n\n    this._spawnFfmpeg(['-encoders'], { captureStdout: true, stdoutLines: 0 }, function(err, stdoutRing) {\n      if (err) {\n        return callback(err);\n      }\n\n      var stdout = stdoutRing.get();\n      var lines = stdout.split(lineBreakRegexp);\n      var data = {};\n\n      lines.forEach(function(line) {\n        var match = line.match(encodersRegexp);\n        if (match && match[7] !== '=') {\n          data[match[7]] = {\n            type: { 'V': 'video', 'A': 'audio', 'S': 'subtitle' }[match[1]],\n            description: match[8],\n            frameMT: match[2] === 'F',\n            sliceMT: match[3] === 'S',\n            experimental: match[4] === 'X',\n            drawHorizBand: match[5] === 'B',\n            directRendering: match[6] === 'D'\n          };\n        }\n      });\n\n      callback(null, cache.encoders = data);\n    });\n  };\n\n\n  /**\n   * A callback passed to {@link FfmpegCommand#availableFormats}.\n   *\n   * @callback FfmpegCommand~formatCallback\n   * @param {Error|null} err error object or null if no error happened\n   * @param {Object} formats format object with format names as keys and the following\n   *   properties for each format:\n   * @param {String} formats.description format description\n   * @param {Boolean} formats.canDemux whether the format is able to demux streams from an input file\n   * @param {Boolean} formats.canMux whether the format is able to mux streams into an output file\n   */\n\n  /**\n   * Query ffmpeg for available formats\n   *\n   * @method FfmpegCommand#availableFormats\n   * @category Capabilities\n   * @aliases getAvailableFormats\n   *\n   * @param {FfmpegCommand~formatCallback} callback callback function\n   */\n  proto.availableFormats =\n  proto.getAvailableFormats = function(callback) {\n    if ('formats' in cache) {\n      return callback(null, cache.formats);\n    }\n\n    // Run ffmpeg -formats\n    this._spawnFfmpeg(['-formats'], { captureStdout: true, stdoutLines: 0 }, function (err, stdoutRing) {\n      if (err) {\n        return callback(err);\n      }\n\n      // Parse output\n      var stdout = stdoutRing.get();\n      var lines = stdout.split(lineBreakRegexp);\n      var data = {};\n\n      lines.forEach(function(line) {\n        var match = line.match(formatRegexp);\n        if (match) {\n          match[3].split(',').forEach(function(format) {\n            if (!(format in data)) {\n              data[format] = {\n                description: match[4],\n                canDemux: false,\n                canMux: false\n              };\n            }\n\n            if (match[1] === 'D') {\n              data[format].canDemux = true;\n            }\n            if (match[2] === 'E') {\n              data[format].canMux = true;\n            }\n          });\n        }\n      });\n\n      callback(null, cache.formats = data);\n    });\n  };\n\n\n  /**\n   * Check capabilities before executing a command\n   *\n   * Checks whether all used codecs and formats are indeed available\n   *\n   * @method FfmpegCommand#_checkCapabilities\n   * @param {Function} callback callback with signature (err)\n   * @private\n   */\n  proto._checkCapabilities = function(callback) {\n    var self = this;\n    async.waterfall([\n      // Get available formats\n      function(cb) {\n        self.availableFormats(cb);\n      },\n\n      // Check whether specified formats are available\n      function(formats, cb) {\n        var unavailable;\n\n        // Output format(s)\n        unavailable = self._outputs\n          .reduce(function(fmts, output) {\n            var format = output.options.find('-f', 1);\n            if (format) {\n              if (!(format[0] in formats) || !(formats[format[0]].canMux)) {\n                fmts.push(format);\n              }\n            }\n\n            return fmts;\n          }, []);\n\n        if (unavailable.length === 1) {\n          return cb(new Error('Output format ' + unavailable[0] + ' is not available'));\n        } else if (unavailable.length > 1) {\n          return cb(new Error('Output formats ' + unavailable.join(', ') + ' are not available'));\n        }\n\n        // Input format(s)\n        unavailable = self._inputs\n          .reduce(function(fmts, input) {\n            var format = input.options.find('-f', 1);\n            if (format) {\n              if (!(format[0] in formats) || !(formats[format[0]].canDemux)) {\n                fmts.push(format[0]);\n              }\n            }\n\n            return fmts;\n          }, []);\n\n        if (unavailable.length === 1) {\n          return cb(new Error('Input format ' + unavailable[0] + ' is not available'));\n        } else if (unavailable.length > 1) {\n          return cb(new Error('Input formats ' + unavailable.join(', ') + ' are not available'));\n        }\n\n        cb();\n      },\n\n      // Get available codecs\n      function(cb) {\n        self.availableEncoders(cb);\n      },\n\n      // Check whether specified codecs are available and add strict experimental options if needed\n      function(encoders, cb) {\n        var unavailable;\n\n        // Audio codec(s)\n        unavailable = self._outputs.reduce(function(cdcs, output) {\n          var acodec = output.audio.find('-acodec', 1);\n          if (acodec && acodec[0] !== 'copy') {\n            if (!(acodec[0] in encoders) || encoders[acodec[0]].type !== 'audio') {\n              cdcs.push(acodec[0]);\n            }\n          }\n\n          return cdcs;\n        }, []);\n\n        if (unavailable.length === 1) {\n          return cb(new Error('Audio codec ' + unavailable[0] + ' is not available'));\n        } else if (unavailable.length > 1) {\n          return cb(new Error('Audio codecs ' + unavailable.join(', ') + ' are not available'));\n        }\n\n        // Video codec(s)\n        unavailable = self._outputs.reduce(function(cdcs, output) {\n          var vcodec = output.video.find('-vcodec', 1);\n          if (vcodec && vcodec[0] !== 'copy') {\n            if (!(vcodec[0] in encoders) || encoders[vcodec[0]].type !== 'video') {\n              cdcs.push(vcodec[0]);\n            }\n          }\n\n          return cdcs;\n        }, []);\n\n        if (unavailable.length === 1) {\n          return cb(new Error('Video codec ' + unavailable[0] + ' is not available'));\n        } else if (unavailable.length > 1) {\n          return cb(new Error('Video codecs ' + unavailable.join(', ') + ' are not available'));\n        }\n\n        cb();\n      }\n    ], callback);\n  };\n};\n","/*jshint node:true, laxcomma:true*/\n'use strict';\n\nvar spawn = require('child_process').spawn;\n\n\nfunction legacyTag(key) { return key.match(/^TAG:/); }\nfunction legacyDisposition(key) { return key.match(/^DISPOSITION:/); }\n\nfunction parseFfprobeOutput(out) {\n  var lines = out.split(/\\r\\n|\\r|\\n/);\n\n  lines = lines.filter(function (line) {\n    return line.length > 0;\n  });\n\n  var data = {\n    streams: [],\n    format: {},\n    chapters: []\n  };\n\n  function parseBlock(name) {\n    var data = {};\n\n    var line = lines.shift();\n    while (typeof line !== 'undefined') {\n      if (line.toLowerCase() == '[/'+name+']') {\n        return data;\n      } else if (line.match(/^\\[/)) {\n        line = lines.shift();\n        continue;\n      }\n\n      var kv = line.match(/^([^=]+)=(.*)$/);\n      if (kv) {\n        if (!(kv[1].match(/^TAG:/)) && kv[2].match(/^[0-9]+(\\.[0-9]+)?$/)) {\n          data[kv[1]] = Number(kv[2]);\n        } else {\n          data[kv[1]] = kv[2];\n        }\n      }\n\n      line = lines.shift();\n    }\n\n    return data;\n  }\n\n  var line = lines.shift();\n  while (typeof line !== 'undefined') {\n    if (line.match(/^\\[stream/i)) {\n      var stream = parseBlock('stream');\n      data.streams.push(stream);\n    } else if (line.match(/^\\[chapter/i)) {\n      var chapter = parseBlock('chapter');\n      data.chapters.push(chapter);\n    } else if (line.toLowerCase() === '[format]') {\n      data.format = parseBlock('format');\n    }\n\n    line = lines.shift();\n  }\n\n  return data;\n}\n\n\n\nmodule.exports = function(proto) {\n  /**\n   * A callback passed to the {@link FfmpegCommand#ffprobe} method.\n   *\n   * @callback FfmpegCommand~ffprobeCallback\n   *\n   * @param {Error|null} err error object or null if no error happened\n   * @param {Object} ffprobeData ffprobe output data; this object\n   *   has the same format as what the following command returns:\n   *\n   *     `ffprobe -print_format json -show_streams -show_format INPUTFILE`\n   * @param {Array} ffprobeData.streams stream information\n   * @param {Object} ffprobeData.format format information\n   */\n\n  /**\n   * Run ffprobe on last specified input\n   *\n   * @method FfmpegCommand#ffprobe\n   * @category Metadata\n   *\n   * @param {?Number} [index] 0-based index of input to probe (defaults to last input)\n   * @param {?String[]} [options] array of output options to return\n   * @param {FfmpegCommand~ffprobeCallback} callback callback function\n   *\n   */\n  proto.ffprobe = function() {\n    var input, index = null, options = [], callback;\n\n    // the last argument should be the callback\n    var callback = arguments[arguments.length - 1];\n\n    var ended = false\n    function handleCallback(err, data) {\n      if (!ended) {\n        ended = true;\n        callback(err, data);\n      }\n    };\n\n    // map the arguments to the correct variable names\n    switch (arguments.length) {\n      case 3:\n        index = arguments[0];\n        options = arguments[1];\n        break;\n      case 2:\n        if (typeof arguments[0] === 'number') {\n          index = arguments[0];\n        } else if (Array.isArray(arguments[0])) {\n          options = arguments[0];\n        }\n        break;\n    }\n\n\n    if (index === null) {\n      if (!this._currentInput) {\n        return handleCallback(new Error('No input specified'));\n      }\n\n      input = this._currentInput;\n    } else {\n      input = this._inputs[index];\n\n      if (!input) {\n        return handleCallback(new Error('Invalid input index'));\n      }\n    }\n\n    // Find ffprobe\n    this._getFfprobePath(function(err, path) {\n      if (err) {\n        return handleCallback(err);\n      } else if (!path) {\n        return handleCallback(new Error('Cannot find ffprobe'));\n      }\n\n      var stdout = '';\n      var stdoutClosed = false;\n      var stderr = '';\n      var stderrClosed = false;\n\n      // Spawn ffprobe\n      var src = input.isStream ? 'pipe:0' : input.source;\n      var ffprobe = spawn(path, ['-show_streams', '-show_format'].concat(options, src), {windowsHide: true});\n\n      if (input.isStream) {\n        // Skip errors on stdin. These get thrown when ffprobe is complete and\n        // there seems to be no way hook in and close stdin before it throws.\n        ffprobe.stdin.on('error', function(err) {\n          if (['ECONNRESET', 'EPIPE', 'EOF'].indexOf(err.code) >= 0) { return; }\n          handleCallback(err);\n        });\n\n        // Once ffprobe's input stream closes, we need no more data from the\n        // input\n        ffprobe.stdin.on('close', function() {\n            input.source.pause();\n            input.source.unpipe(ffprobe.stdin);\n        });\n\n        input.source.pipe(ffprobe.stdin);\n      }\n\n      ffprobe.on('error', callback);\n\n      // Ensure we wait for captured streams to end before calling callback\n      var exitError = null;\n      function handleExit(err) {\n        if (err) {\n          exitError = err;\n        }\n\n        if (processExited && stdoutClosed && stderrClosed) {\n          if (exitError) {\n            if (stderr) {\n              exitError.message += '\\n' + stderr;\n            }\n\n            return handleCallback(exitError);\n          }\n\n          // Process output\n          var data = parseFfprobeOutput(stdout);\n\n          // Handle legacy output with \"TAG:x\" and \"DISPOSITION:x\" keys\n          [data.format].concat(data.streams).forEach(function(target) {\n            if (target) {\n              var legacyTagKeys = Object.keys(target).filter(legacyTag);\n\n              if (legacyTagKeys.length) {\n                target.tags = target.tags || {};\n\n                legacyTagKeys.forEach(function(tagKey) {\n                  target.tags[tagKey.substr(4)] = target[tagKey];\n                  delete target[tagKey];\n                });\n              }\n\n              var legacyDispositionKeys = Object.keys(target).filter(legacyDisposition);\n\n              if (legacyDispositionKeys.length) {\n                target.disposition = target.disposition || {};\n\n                legacyDispositionKeys.forEach(function(dispositionKey) {\n                  target.disposition[dispositionKey.substr(12)] = target[dispositionKey];\n                  delete target[dispositionKey];\n                });\n              }\n            }\n          });\n\n          handleCallback(null, data);\n        }\n      }\n\n      // Handle ffprobe exit\n      var processExited = false;\n      ffprobe.on('exit', function(code, signal) {\n        processExited = true;\n\n        if (code) {\n          handleExit(new Error('ffprobe exited with code ' + code));\n        } else if (signal) {\n          handleExit(new Error('ffprobe was killed with signal ' + signal));\n        } else {\n          handleExit();\n        }\n      });\n\n      // Handle stdout/stderr streams\n      ffprobe.stdout.on('data', function(data) {\n        stdout += data;\n      });\n\n      ffprobe.stdout.on('close', function() {\n        stdoutClosed = true;\n        handleExit();\n      });\n\n      ffprobe.stderr.on('data', function(data) {\n        stderr += data;\n      });\n\n      ffprobe.stderr.on('close', function() {\n        stderrClosed = true;\n        handleExit();\n      });\n    });\n  };\n};\n","/*jshint node:true*/\n'use strict';\n\nvar fs = require('fs');\nvar path = require('path');\nvar PassThrough = require('stream').PassThrough;\nvar async = require('async');\nvar utils = require('./utils');\n\n\n/*\n * Useful recipes for commands\n */\n\nmodule.exports = function recipes(proto) {\n  /**\n   * Execute ffmpeg command and save output to a file\n   *\n   * @method FfmpegCommand#save\n   * @category Processing\n   * @aliases saveToFile\n   *\n   * @param {String} output file path\n   * @return FfmpegCommand\n   */\n  proto.saveToFile =\n  proto.save = function(output) {\n    this.output(output).run();\n    return this;\n  };\n\n\n  /**\n   * Execute ffmpeg command and save output to a stream\n   *\n   * If 'stream' is not specified, a PassThrough stream is created and returned.\n   * 'options' will be used when piping ffmpeg output to the output stream\n   * (@see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options)\n   *\n   * @method FfmpegCommand#pipe\n   * @category Processing\n   * @aliases stream,writeToStream\n   *\n   * @param {stream.Writable} [stream] output stream\n   * @param {Object} [options={}] pipe options\n   * @return Output stream\n   */\n  proto.writeToStream =\n  proto.pipe =\n  proto.stream = function(stream, options) {\n    if (stream && !('writable' in stream)) {\n      options = stream;\n      stream = undefined;\n    }\n\n    if (!stream) {\n      if (process.version.match(/v0\\.8\\./)) {\n        throw new Error('PassThrough stream is not supported on node v0.8');\n      }\n\n      stream = new PassThrough();\n    }\n\n    this.output(stream, options).run();\n    return stream;\n  };\n\n\n  /**\n   * Generate images from a video\n   *\n   * Note: this method makes the command emit a 'filenames' event with an array of\n   * the generated image filenames.\n   *\n   * @method FfmpegCommand#screenshots\n   * @category Processing\n   * @aliases takeScreenshots,thumbnail,thumbnails,screenshot\n   *\n   * @param {Number|Object} [config=1] screenshot count or configuration object with\n   *   the following keys:\n   * @param {Number} [config.count] number of screenshots to take; using this option\n   *   takes screenshots at regular intervals (eg. count=4 would take screens at 20%, 40%,\n   *   60% and 80% of the video length).\n   * @param {String} [config.folder='.'] output folder\n   * @param {String} [config.filename='tn.png'] output filename pattern, may contain the following\n   *   tokens:\n   *   - '%s': offset in seconds\n   *   - '%w': screenshot width\n   *   - '%h': screenshot height\n   *   - '%r': screenshot resolution (same as '%wx%h')\n   *   - '%f': input filename\n   *   - '%b': input basename (filename w/o extension)\n   *   - '%i': index of screenshot in timemark array (can be zero-padded by using it like `%000i`)\n   * @param {Number[]|String[]} [config.timemarks] array of timemarks to take screenshots\n   *   at; each timemark may be a number of seconds, a '[[hh:]mm:]ss[.xxx]' string or a\n   *   'XX%' string.  Overrides 'count' if present.\n   * @param {Number[]|String[]} [config.timestamps] alias for 'timemarks'\n   * @param {Boolean} [config.fastSeek] use fast seek (less accurate)\n   * @param {String} [config.size] screenshot size, with the same syntax as {@link FfmpegCommand#size}\n   * @param {String} [folder] output folder (legacy alias for 'config.folder')\n   * @return FfmpegCommand\n   */\n  proto.takeScreenshots =\n  proto.thumbnail =\n  proto.thumbnails =\n  proto.screenshot =\n  proto.screenshots = function(config, folder) {\n    var self = this;\n    var source = this._currentInput.source;\n    config = config || { count: 1 };\n\n    // Accept a number of screenshots instead of a config object\n    if (typeof config === 'number') {\n      config = {\n        count: config\n      };\n    }\n\n    // Accept a second 'folder' parameter instead of config.folder\n    if (!('folder' in config)) {\n      config.folder = folder || '.';\n    }\n\n    // Accept 'timestamps' instead of 'timemarks'\n    if ('timestamps' in config) {\n      config.timemarks = config.timestamps;\n    }\n\n    // Compute timemarks from count if not present\n    if (!('timemarks' in config)) {\n      if (!config.count) {\n        throw new Error('Cannot take screenshots: neither a count nor a timemark list are specified');\n      }\n\n      var interval = 100 / (1 + config.count);\n      config.timemarks = [];\n      for (var i = 0; i < config.count; i++) {\n        config.timemarks.push((interval * (i + 1)) + '%');\n      }\n    }\n\n    // Parse size option\n    if ('size' in config) {\n      var fixedSize = config.size.match(/^(\\d+)x(\\d+)$/);\n      var fixedWidth = config.size.match(/^(\\d+)x\\?$/);\n      var fixedHeight = config.size.match(/^\\?x(\\d+)$/);\n      var percentSize = config.size.match(/^(\\d+)%$/);\n\n      if (!fixedSize && !fixedWidth && !fixedHeight && !percentSize) {\n        throw new Error('Invalid size parameter: ' + config.size);\n      }\n    }\n\n    // Metadata helper\n    var metadata;\n    function getMetadata(cb) {\n      if (metadata) {\n        cb(null, metadata);\n      } else {\n        self.ffprobe(function(err, meta) {\n          metadata = meta;\n          cb(err, meta);\n        });\n      }\n    }\n\n    async.waterfall([\n      // Compute percent timemarks if any\n      function computeTimemarks(next) {\n        if (config.timemarks.some(function(t) { return ('' + t).match(/^[\\d.]+%$/); })) {\n          if (typeof source !== 'string') {\n            return next(new Error('Cannot compute screenshot timemarks with an input stream, please specify fixed timemarks'));\n          }\n\n          getMetadata(function(err, meta) {\n            if (err) {\n              next(err);\n            } else {\n              // Select video stream with the highest resolution\n              var vstream = meta.streams.reduce(function(biggest, stream) {\n                if (stream.codec_type === 'video' && stream.width * stream.height > biggest.width * biggest.height) {\n                  return stream;\n                } else {\n                  return biggest;\n                }\n              }, { width: 0, height: 0 });\n\n              if (vstream.width === 0) {\n                return next(new Error('No video stream in input, cannot take screenshots'));\n              }\n\n              var duration = Number(vstream.duration);\n              if (isNaN(duration)) {\n                duration = Number(meta.format.duration);\n              }\n\n              if (isNaN(duration)) {\n                return next(new Error('Could not get input duration, please specify fixed timemarks'));\n              }\n\n              config.timemarks = config.timemarks.map(function(mark) {\n                if (('' + mark).match(/^([\\d.]+)%$/)) {\n                  return duration * parseFloat(mark) / 100;\n                } else {\n                  return mark;\n                }\n              });\n\n              next();\n            }\n          });\n        } else {\n          next();\n        }\n      },\n\n      // Turn all timemarks into numbers and sort them\n      function normalizeTimemarks(next) {\n        config.timemarks = config.timemarks.map(function(mark) {\n          return utils.timemarkToSeconds(mark);\n        }).sort(function(a, b) { return a - b; });\n\n        next();\n      },\n\n      // Add '_%i' to pattern when requesting multiple screenshots and no variable token is present\n      function fixPattern(next) {\n        var pattern = config.filename || 'tn.png';\n\n        if (pattern.indexOf('.') === -1) {\n          pattern += '.png';\n        }\n\n        if (config.timemarks.length > 1 && !pattern.match(/%(s|0*i)/)) {\n          var ext = path.extname(pattern);\n          pattern = path.join(path.dirname(pattern), path.basename(pattern, ext) + '_%i' + ext);\n        }\n\n        next(null, pattern);\n      },\n\n      // Replace filename tokens (%f, %b) in pattern\n      function replaceFilenameTokens(pattern, next) {\n        if (pattern.match(/%[bf]/)) {\n          if (typeof source !== 'string') {\n            return next(new Error('Cannot replace %f or %b when using an input stream'));\n          }\n\n          pattern = pattern\n            .replace(/%f/g, path.basename(source))\n            .replace(/%b/g, path.basename(source, path.extname(source)));\n        }\n\n        next(null, pattern);\n      },\n\n      // Compute size if needed\n      function getSize(pattern, next) {\n        if (pattern.match(/%[whr]/)) {\n          if (fixedSize) {\n            return next(null, pattern, fixedSize[1], fixedSize[2]);\n          }\n\n          getMetadata(function(err, meta) {\n            if (err) {\n              return next(new Error('Could not determine video resolution to replace %w, %h or %r'));\n            }\n\n            var vstream = meta.streams.reduce(function(biggest, stream) {\n              if (stream.codec_type === 'video' && stream.width * stream.height > biggest.width * biggest.height) {\n                return stream;\n              } else {\n                return biggest;\n              }\n            }, { width: 0, height: 0 });\n\n            if (vstream.width === 0) {\n              return next(new Error('No video stream in input, cannot replace %w, %h or %r'));\n            }\n\n            var width = vstream.width;\n            var height = vstream.height;\n\n            if (fixedWidth) {\n              height = height * Number(fixedWidth[1]) / width;\n              width = Number(fixedWidth[1]);\n            } else if (fixedHeight) {\n              width = width * Number(fixedHeight[1]) / height;\n              height = Number(fixedHeight[1]);\n            } else if (percentSize) {\n              width = width * Number(percentSize[1]) / 100;\n              height = height * Number(percentSize[1]) / 100;\n            }\n\n            next(null, pattern, Math.round(width / 2) * 2, Math.round(height / 2) * 2);\n          });\n        } else {\n          next(null, pattern, -1, -1);\n        }\n      },\n\n      // Replace size tokens (%w, %h, %r) in pattern\n      function replaceSizeTokens(pattern, width, height, next) {\n        pattern = pattern\n          .replace(/%r/g, '%wx%h')\n          .replace(/%w/g, width)\n          .replace(/%h/g, height);\n\n        next(null, pattern);\n      },\n\n      // Replace variable tokens in pattern (%s, %i) and generate filename list\n      function replaceVariableTokens(pattern, next) {\n        var filenames = config.timemarks.map(function(t, i) {\n          return pattern\n            .replace(/%s/g, utils.timemarkToSeconds(t))\n            .replace(/%(0*)i/g, function(match, padding) {\n              var idx = '' + (i + 1);\n              return padding.substr(0, Math.max(0, padding.length + 1 - idx.length)) + idx;\n            });\n        });\n\n        self.emit('filenames', filenames);\n        next(null, filenames);\n      },\n\n      // Create output directory\n      function createDirectory(filenames, next) {\n        fs.exists(config.folder, function(exists) {\n          if (!exists) {\n            fs.mkdir(config.folder, function(err) {\n              if (err) {\n                next(err);\n              } else {\n                next(null, filenames);\n              }\n            });\n          } else {\n            next(null, filenames);\n          }\n        });\n      }\n    ], function runCommand(err, filenames) {\n      if (err) {\n        return self.emit('error', err);\n      }\n\n      var count = config.timemarks.length;\n      var split;\n      var filters = [split = {\n        filter: 'split',\n        options: count,\n        outputs: []\n      }];\n\n      if ('size' in config) {\n        // Set size to generate size filters\n        self.size(config.size);\n\n        // Get size filters and chain them with 'sizeN' stream names\n        var sizeFilters =  self._currentOutput.sizeFilters.get().map(function(f, i) {\n          if (i > 0) {\n            f.inputs = 'size' + (i - 1);\n          }\n\n          f.outputs = 'size' + i;\n\n          return f;\n        });\n\n        // Input last size filter output into split filter\n        split.inputs = 'size' + (sizeFilters.length - 1);\n\n        // Add size filters in front of split filter\n        filters = sizeFilters.concat(filters);\n\n        // Remove size filters\n        self._currentOutput.sizeFilters.clear();\n      }\n\n      var first = 0;\n      for (var i = 0; i < count; i++) {\n        var stream = 'screen' + i;\n        split.outputs.push(stream);\n\n        if (i === 0) {\n          first = config.timemarks[i];\n          self.seekInput(first);\n        }\n\n        self.output(path.join(config.folder, filenames[i]))\n          .frames(1)\n          .map(stream);\n\n        if (i > 0) {\n          self.seek(config.timemarks[i] - first);\n        }\n      }\n\n      self.complexFilter(filters);\n      self.run();\n    });\n\n    return this;\n  };\n\n\n  /**\n   * Merge (concatenate) inputs to a single file\n   *\n   * @method FfmpegCommand#concat\n   * @category Processing\n   * @aliases concatenate,mergeToFile\n   *\n   * @param {String|Writable} target output file or writable stream\n   * @param {Object} [options] pipe options (only used when outputting to a writable stream)\n   * @return FfmpegCommand\n   */\n  proto.mergeToFile =\n  proto.concatenate =\n  proto.concat = function(target, options) {\n    // Find out which streams are present in the first non-stream input\n    var fileInput = this._inputs.filter(function(input) {\n      return !input.isStream;\n    })[0];\n\n    var self = this;\n    this.ffprobe(this._inputs.indexOf(fileInput), function(err, data) {\n      if (err) {\n        return self.emit('error', err);\n      }\n\n      var hasAudioStreams = data.streams.some(function(stream) {\n        return stream.codec_type === 'audio';\n      });\n\n      var hasVideoStreams = data.streams.some(function(stream) {\n        return stream.codec_type === 'video';\n      });\n\n      // Setup concat filter and start processing\n      self.output(target, options)\n        .complexFilter({\n          filter: 'concat',\n          options: {\n            n: self._inputs.length,\n            v: hasVideoStreams ? 1 : 0,\n            a: hasAudioStreams ? 1 : 0\n          }\n        })\n        .run();\n    });\n\n    return this;\n  };\n};\n","/*jshint node:true*/\n'use strict';\n\nvar path = require('path');\nvar util = require('util');\nvar EventEmitter = require('events').EventEmitter;\n\nvar utils = require('./utils');\nvar ARGLISTS = ['_global', '_audio', '_audioFilters', '_video', '_videoFilters', '_sizeFilters', '_complexFilters'];\n\n\n/**\n * Create an ffmpeg command\n *\n * Can be called with or without the 'new' operator, and the 'input' parameter\n * may be specified as 'options.source' instead (or passed later with the\n * addInput method).\n *\n * @constructor\n * @param {String|ReadableStream} [input] input file path or readable stream\n * @param {Object} [options] command options\n * @param {Object} [options.logger=<no logging>] logger object with 'error', 'warning', 'info' and 'debug' methods\n * @param {Number} [options.niceness=0] ffmpeg process niceness, ignored on Windows\n * @param {Number} [options.priority=0] alias for `niceness`\n * @param {String} [options.presets=\"fluent-ffmpeg/lib/presets\"] directory to load presets from\n * @param {String} [options.preset=\"fluent-ffmpeg/lib/presets\"] alias for `presets`\n * @param {String} [options.stdoutLines=100] maximum lines of ffmpeg output to keep in memory, use 0 for unlimited\n * @param {Number} [options.timeout=<no timeout>] ffmpeg processing timeout in seconds\n * @param {String|ReadableStream} [options.source=<no input>] alias for the `input` parameter\n */\nfunction FfmpegCommand(input, options) {\n  // Make 'new' optional\n  if (!(this instanceof FfmpegCommand)) {\n    return new FfmpegCommand(input, options);\n  }\n\n  EventEmitter.call(this);\n\n  if (typeof input === 'object' && !('readable' in input)) {\n    // Options object passed directly\n    options = input;\n  } else {\n    // Input passed first\n    options = options || {};\n    options.source = input;\n  }\n\n  // Add input if present\n  this._inputs = [];\n  if (options.source) {\n    this.input(options.source);\n  }\n\n  // Add target-less output for backwards compatibility\n  this._outputs = [];\n  this.output();\n\n  // Create argument lists\n  var self = this;\n  ['_global', '_complexFilters'].forEach(function(prop) {\n    self[prop] = utils.args();\n  });\n\n  // Set default option values\n  options.stdoutLines = 'stdoutLines' in options ? options.stdoutLines : 100;\n  options.presets = options.presets || options.preset || path.join(__dirname, 'presets');\n  options.niceness = options.niceness || options.priority || 0;\n\n  // Save options\n  this.options = options;\n\n  // Setup logger\n  this.logger = options.logger || {\n    debug: function() {},\n    info: function() {},\n    warn: function() {},\n    error: function() {}\n  };\n}\nutil.inherits(FfmpegCommand, EventEmitter);\nmodule.exports = FfmpegCommand;\n\n\n/**\n * Clone an ffmpeg command\n *\n * This method is useful when you want to process the same input multiple times.\n * It returns a new FfmpegCommand instance with the exact same options.\n *\n * All options set _after_ the clone() call will only be applied to the instance\n * it has been called on.\n *\n * @example\n *   var command = ffmpeg('/path/to/source.avi')\n *     .audioCodec('libfaac')\n *     .videoCodec('libx264')\n *     .format('mp4');\n *\n *   command.clone()\n *     .size('320x200')\n *     .save('/path/to/output-small.mp4');\n *\n *   command.clone()\n *     .size('640x400')\n *     .save('/path/to/output-medium.mp4');\n *\n *   command.save('/path/to/output-original-size.mp4');\n *\n * @method FfmpegCommand#clone\n * @return FfmpegCommand\n */\nFfmpegCommand.prototype.clone = function() {\n  var clone = new FfmpegCommand();\n  var self = this;\n\n  // Clone options and logger\n  clone.options = this.options;\n  clone.logger = this.logger;\n\n  // Clone inputs\n  clone._inputs = this._inputs.map(function(input) {\n    return {\n      source: input.source,\n      options: input.options.clone()\n    };\n  });\n\n  // Create first output\n  if ('target' in this._outputs[0]) {\n    // We have outputs set, don't clone them and create first output\n    clone._outputs = [];\n    clone.output();\n  } else {\n    // No outputs set, clone first output options\n    clone._outputs = [\n      clone._currentOutput = {\n        flags: {}\n      }\n    ];\n\n    ['audio', 'audioFilters', 'video', 'videoFilters', 'sizeFilters', 'options'].forEach(function(key) {\n      clone._currentOutput[key] = self._currentOutput[key].clone();\n    });\n\n    if (this._currentOutput.sizeData) {\n      clone._currentOutput.sizeData = {};\n      utils.copy(this._currentOutput.sizeData, clone._currentOutput.sizeData);\n    }\n\n    utils.copy(this._currentOutput.flags, clone._currentOutput.flags);\n  }\n\n  // Clone argument lists\n  ['_global', '_complexFilters'].forEach(function(prop) {\n    clone[prop] = self[prop].clone();\n  });\n\n  return clone;\n};\n\n\n/* Add methods from options submodules */\n\nrequire('./options/inputs')(FfmpegCommand.prototype);\nrequire('./options/audio')(FfmpegCommand.prototype);\nrequire('./options/video')(FfmpegCommand.prototype);\nrequire('./options/videosize')(FfmpegCommand.prototype);\nrequire('./options/output')(FfmpegCommand.prototype);\nrequire('./options/custom')(FfmpegCommand.prototype);\nrequire('./options/misc')(FfmpegCommand.prototype);\n\n\n/* Add processor methods */\n\nrequire('./processor')(FfmpegCommand.prototype);\n\n\n/* Add capabilities methods */\n\nrequire('./capabilities')(FfmpegCommand.prototype);\n\nFfmpegCommand.setFfmpegPath = function(path) {\n  (new FfmpegCommand()).setFfmpegPath(path);\n};\n\nFfmpegCommand.setFfprobePath = function(path) {\n  (new FfmpegCommand()).setFfprobePath(path);\n};\n\nFfmpegCommand.setFlvtoolPath = function(path) {\n  (new FfmpegCommand()).setFlvtoolPath(path);\n};\n\nFfmpegCommand.availableFilters =\nFfmpegCommand.getAvailableFilters = function(callback) {\n  (new FfmpegCommand()).availableFilters(callback);\n};\n\nFfmpegCommand.availableCodecs =\nFfmpegCommand.getAvailableCodecs = function(callback) {\n  (new FfmpegCommand()).availableCodecs(callback);\n};\n\nFfmpegCommand.availableFormats =\nFfmpegCommand.getAvailableFormats = function(callback) {\n  (new FfmpegCommand()).availableFormats(callback);\n};\n\nFfmpegCommand.availableEncoders =\nFfmpegCommand.getAvailableEncoders = function(callback) {\n  (new FfmpegCommand()).availableEncoders(callback);\n};\n\n\n/* Add ffprobe methods */\n\nrequire('./ffprobe')(FfmpegCommand.prototype);\n\nFfmpegCommand.ffprobe = function(file) {\n  var instance = new FfmpegCommand(file);\n  instance.ffprobe.apply(instance, Array.prototype.slice.call(arguments, 1));\n};\n\n/* Add processing recipes */\n\nrequire('./recipes')(FfmpegCommand.prototype);\n","module.exports = require('./lib/fluent-ffmpeg');\n"],"names":["fs","require$$0","path","global","require$$1","require$$2","utils","utilsModule","index","audio","video","output","options","require","async","callback","err","q","process","args","require$$3","require$$4","ffmpeg","ffprobe","line","data","recipes","i","fluentFfmpeg","require$$5","require$$6","require$$7","require$$8","require$$9","require$$10","require$$11","require$$12","require$$13","require$$14"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18]}